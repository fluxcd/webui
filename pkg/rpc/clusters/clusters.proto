syntax = "proto3";
package clusters;

option go_package = "pkg/rpc/clusters";

service Clusters {
    rpc ListContexts (ListContextsReq) returns (ListContextsRes);
    rpc ListNamespacesForContext (ListNamespacesForContextReq) returns (ListNamespacesForContextRes);
    rpc ListKustomizations (ListKustomizationsReq) returns (ListKustomizationsRes);
    rpc ListSources (ListSourcesReq) returns (ListSourcesRes);
    rpc SyncKustomization (SyncKustomizationReq) returns (SyncKustomizationRes);
    rpc ListHelmReleases (ListHelmReleasesReq) returns (ListHelmReleasesRes);
    rpc ListEvents (ListEventsReq) returns (ListEventsRes);
    rpc SyncSource (SyncSourceReq) returns (SyncSourceRes);
    rpc SyncHelmRelease (SyncHelmReleaseReq) returns (SyncHelmReleaseRes);
    rpc ListAlerts (ListAlertsReq) returns (ListAlertsRes);
    rpc ListImagePolicies (ListImagePoliciesReq) returns (ListImagePoliciesRes);
    rpc ListImageRepositories (ListImageRepositoriesReq) returns (ListImageRepositoriesRes);
    rpc ListImageUpdateAutomations (ListImageUpdateAutomationsReq) returns (ListImageUpdateAutomationsRes);
    rpc ListProviders (ListProvidersReq) returns (ListProvidersRes);
    rpc ListReceivers (ListReceiversReq) returns (ListReceiversRes);
    rpc SyncImageRepository (SyncImageRepositoryReq) returns (SyncImageRepositoryRes);
    rpc SyncImageUpdateAutomation (SyncImageUpdateAutomationReq) returns (SyncImageUpdateAutomationRes);
    rpc GetReconciledObjects(GetReconciledObjectsReq) returns (GetReconciledObjectsRes);
    rpc GetChildObjects(GetChildObjectsReq) returns (GetChildObjectsRes);
}

message Context {
    string name = 1;
}

message ListContextsReq {

}

message ListContextsRes {
    string currentContext = 1;
    repeated Context contexts = 2;
}

message ListNamespacesForContextReq {
    string contextName = 1;
}

message ListNamespacesForContextRes {
    repeated string namespaces = 1;
}

message CrossNamespaceObjectReference {
    string apiVersion = 1;
    string kind = 2;
    string name = 3;
    string namespace = 4;
}

message Condition {
    string type = 1;
    string status = 2;
    string reason = 3;
    string message = 4;
    string timestamp = 5;
}

message GroupVersionKind {
    string group = 1;
    string kind = 2;
    string version = 3;
}

message SnapshotEntry {
    string namespace = 1;
    repeated GroupVersionKind kinds =2;
}

message Kustomization {
    string name = 1;
    string namespace = 2;
    string targetNamespace = 3;
    string path = 4;
    string sourceRef = 5;
    repeated Condition conditions = 6;
    string interval = 7;
    bool prune = 8;
    string reconcileRequestAt = 9;
    string reconcileAt = 10;
    Source.Type sourceRefKind = 11;
    repeated SnapshotEntry snapshots = 12;
    string lastAppliedRevision = 13;
    string lastAttemptedRevision = 14;

}

message ListKustomizationsReq {
    string contextName = 1;
    string namespace = 2;
}

message ListKustomizationsRes {
    repeated Kustomization kustomizations = 1;
}


message GitRepositoryRef {
    string branch = 1;
    string tag = 2;
    string semver = 3;
    string commit = 4;
}

message Artifact {
    string checksum  = 1;
    int32 lastupdateat = 2;
    string path = 3;
    string revision = 4;
    string url = 5;
}

message Source {
    string name = 1;
    string url = 2;
    GitRepositoryRef reference = 3;
    enum Type {
        Git = 0;
        Bucket = 1;
        Helm = 2;
        Chart = 3;
    };
    Type type = 4;
    string provider = 5;
    string bucketname = 6;
    string region = 7;
    string namespace = 8;
    string gitimplementation = 9;
    string timeout = 10;
    string secretRefName = 11;
    repeated Condition conditions = 12;
    Artifact artifact = 13;
}

message ListSourcesReq {
    string contextName = 1;
    string namespace = 2;
    Source.Type sourceType = 3;
}

message ListSourcesRes {
    repeated Source sources  = 1;
}

message SyncSourceReq {
    string contextName = 1;
    string namespace = 2;
    string sourceName = 3;
    Source.Type sourceType = 4;
}

message SyncSourceRes {
    Source source = 1;
}

message SyncKustomizationReq {
    string contextName = 1;
    string namespace = 2;
    string kustomizationName = 3;
    bool withSource = 4;
}

message SyncKustomizationRes {
    Kustomization kustomization = 1;
}

message HelmRelease {
    string name = 1;
    string namespace = 2;
    string interval = 3;
    string chartName = 5;
    string version = 6;
    string sourceKind = 7;
    string sourceName  = 8;
    string sourceNamespace = 9;
    repeated Condition conditions = 12;
}

message ListHelmReleasesReq {
    string contextName = 1;
    string namespace = 2;
}

message ListHelmReleasesRes {
    repeated HelmRelease helm_releases = 1;
}

message SyncHelmReleaseReq {
    string contextName = 1;
    string namespace = 2;
    string helmReleaseName = 3;
}

message SyncHelmReleaseRes {
    HelmRelease helmrelease = 1;
}

message ImagePolicy {
    string name = 1;
    string namespace = 2;
    string imageRepositoryRef = 3;
    string policyKind = 4;
    string policy = 5;
    string filterTagsPattern = 6;
    string filterTagsExtract = 7;
    string latestImage = 8;
    repeated Condition conditions = 9;
}

message ListImagePoliciesReq {
    string contextName = 1;
    string namespace = 2;
}

message ListImagePoliciesRes {
    repeated ImagePolicy image_policies = 1;
}

message ImageRepository {
    string name = 1;
    string namespace = 2;
    string image = 3;
    string secretRef = 4;
    repeated Condition conditions = 5;
    string interval = 6;
    string timeout = 7;
    string certSecretRef = 8;
    bool suspend = 9;
    string reconcileRequestAt = 10;
    string reconcileAt = 11;
    int32 lastScanResultTagCount = 12;
    int32 lastScanResultScanTime = 13;
}

message ListImageRepositoriesReq {
    string contextName = 1;
    string namespace = 2;
}

message ListImageRepositoriesRes {
    repeated ImageRepository image_repositories = 1;
}

message SyncImageRepositoryReq {
    string contextName = 1;
    string namespace = 2;
    string imageRepositoryName = 3;
}

message SyncImageRepositoryRes {
    ImageRepository imagerepository = 1;
}

message ImageUpdateAutomation {
    string name = 1;
    string namespace = 2;
    string sourceRef = 3;
    repeated Condition conditions = 4;
    string interval = 5;
    string updatePath = 6;
    string updateStrategy = 7;
    bool suspend = 8;
    string reconcileRequestAt = 9;
    string reconcileAt = 10;
    Source.Type sourceRefKind = 11;
    int32 lastAutomationRunTime = 12;
    string lastPushCommit = 13;
    int32 lastPushTime = 14;
}

message ListImageUpdateAutomationsReq {
    string contextName = 1;
    string namespace = 2;
}

message ListImageUpdateAutomationsRes {
    repeated ImageUpdateAutomation image_update_automations = 1;
}

message SyncImageUpdateAutomationReq {
    string contextName = 1;
    string namespace = 2;
    string imageUpdateAutomationName = 3;
}

message SyncImageUpdateAutomationRes {
    ImageUpdateAutomation imageupdateautomation = 1;
}

message Alert {
    string name = 1;
    string namespace = 2;
    string providerRef = 3;
    string eventSeverity = 4;
    repeated CrossNamespaceObjectReference eventSources = 5;
    repeated string exclusionList = 6;
    string summary = 7;
    bool suspend = 8;
    repeated Condition conditions = 9;
}

message ListAlertsReq {
    string contextName = 1;
    string namespace = 2;
}

message ListAlertsRes {
    repeated Alert alerts = 1;
}

message Provider {
    string name = 1;
    string namespace = 2;
    string type = 3;
    string channel = 4;
    string username = 5;
    string address = 6;
    string proxy = 7;
    string secretRef = 8;
    string certSecretRef = 9;
    repeated Condition conditions = 10;
}

message ListProvidersReq {
    string contextName = 1;
    string namespace = 2;
}

message ListProvidersRes {
    repeated Provider providers = 1;
}

message Receiver {
    string name = 1;
    string namespace = 2;
    string type = 3;
    repeated string events = 4;
    repeated CrossNamespaceObjectReference resources = 5;
    string secretRef = 6;
    bool suspend = 7;
    string url = 8;
    repeated Condition conditions = 9;
}

message ListReceiversReq {
    string contextName = 1;
    string namespace = 2;
}

message ListReceiversRes {
    repeated Receiver receivers = 1;
}

message Container {
    string name = 1;
    string image = 2;
}

message PodTemplate {
    repeated Container containers = 1;
}

message Workload {
    string name = 1;
    string namespace = 2;
    string kustomizationRefName = 3;
    string kustomizationRefNamespace = 4;
    PodTemplate podTemplate = 5;
}

message ListWorkloadsReq {
    string contextName = 1;
    string namespace = 2;
}

message ListWorkloadsRes {
    repeated Workload workloads = 1;
}

message ListKustomizationChildrenReq {
    string contextName = 1;
    string kustomizationName = 2;
    string KustomizationNamespace = 3;
}

message ListKustomizationChildrenRes {
    repeated Workload workloads = 1;
}

message Event {
    string type = 1;
    string reason = 2;
    string message = 3;
    int32 timestamp = 4;
    string source = 5;
}

message ListEventsReq {
    string contextName = 1;
    string namespace = 2;
}

message ListEventsRes {
    repeated Event events = 1;
}


message GetReconciledObjectsReq {
    string contextName = 1;
    string kustomizationName = 2;
    string kustomizationNamespace = 3;
    repeated GroupVersionKind kinds = 4;
}

message UnstructuredObject {
    GroupVersionKind groupVersionKind = 2;
    string name = 3;
    string namespace = 4;
    string uid = 5;
    string status = 6;
}

message GetReconciledObjectsRes {
    repeated UnstructuredObject objects = 1;
}

message GetChildObjectsReq {
    string contextName = 1;
    GroupVersionKind groupVersionKind = 2;
    string parentUid = 3;
}

message GetChildObjectsRes {
    repeated UnstructuredObject objects = 1;
}

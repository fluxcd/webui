// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        (unknown)
// source: pkg/rpc/clusters/clusters.proto

package clusters

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Type int32

const (
	Type_Git    Type = 0
	Type_Bucket Type = 1
	Type_Helm   Type = 2
	Type_Chart  Type = 3
)

// Enum value maps for Type.
var (
	Type_name = map[int32]string{
		0: "Git",
		1: "Bucket",
		2: "Helm",
		3: "Chart",
	}
	Type_value = map[string]int32{
		"Git":    0,
		"Bucket": 1,
		"Helm":   2,
		"Chart":  3,
	}
)

func (x Type) Enum() *Type {
	p := new(Type)
	*p = x
	return p
}

func (x Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Type) Descriptor() protoreflect.EnumDescriptor {
	return file_pkg_rpc_clusters_clusters_proto_enumTypes[0].Descriptor()
}

func (Type) Type() protoreflect.EnumType {
	return &file_pkg_rpc_clusters_clusters_proto_enumTypes[0]
}

func (x Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Type.Descriptor instead.
func (Type) EnumDescriptor() ([]byte, []int) {
	return file_pkg_rpc_clusters_clusters_proto_rawDescGZIP(), []int{0}
}

type Context struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *Context) Reset() {
	*x = Context{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_rpc_clusters_clusters_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Context) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Context) ProtoMessage() {}

func (x *Context) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_rpc_clusters_clusters_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Context.ProtoReflect.Descriptor instead.
func (*Context) Descriptor() ([]byte, []int) {
	return file_pkg_rpc_clusters_clusters_proto_rawDescGZIP(), []int{0}
}

func (x *Context) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type ListContextsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListContextsReq) Reset() {
	*x = ListContextsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_rpc_clusters_clusters_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListContextsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListContextsReq) ProtoMessage() {}

func (x *ListContextsReq) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_rpc_clusters_clusters_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListContextsReq.ProtoReflect.Descriptor instead.
func (*ListContextsReq) Descriptor() ([]byte, []int) {
	return file_pkg_rpc_clusters_clusters_proto_rawDescGZIP(), []int{1}
}

type ListContextsRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CurrentContext string     `protobuf:"bytes,1,opt,name=currentContext,proto3" json:"currentContext,omitempty"`
	Contexts       []*Context `protobuf:"bytes,2,rep,name=contexts,proto3" json:"contexts,omitempty"`
}

func (x *ListContextsRes) Reset() {
	*x = ListContextsRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_rpc_clusters_clusters_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListContextsRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListContextsRes) ProtoMessage() {}

func (x *ListContextsRes) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_rpc_clusters_clusters_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListContextsRes.ProtoReflect.Descriptor instead.
func (*ListContextsRes) Descriptor() ([]byte, []int) {
	return file_pkg_rpc_clusters_clusters_proto_rawDescGZIP(), []int{2}
}

func (x *ListContextsRes) GetCurrentContext() string {
	if x != nil {
		return x.CurrentContext
	}
	return ""
}

func (x *ListContextsRes) GetContexts() []*Context {
	if x != nil {
		return x.Contexts
	}
	return nil
}

type ListNamespacesForContextReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ContextName string `protobuf:"bytes,1,opt,name=contextName,proto3" json:"contextName,omitempty"`
}

func (x *ListNamespacesForContextReq) Reset() {
	*x = ListNamespacesForContextReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_rpc_clusters_clusters_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListNamespacesForContextReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListNamespacesForContextReq) ProtoMessage() {}

func (x *ListNamespacesForContextReq) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_rpc_clusters_clusters_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListNamespacesForContextReq.ProtoReflect.Descriptor instead.
func (*ListNamespacesForContextReq) Descriptor() ([]byte, []int) {
	return file_pkg_rpc_clusters_clusters_proto_rawDescGZIP(), []int{3}
}

func (x *ListNamespacesForContextReq) GetContextName() string {
	if x != nil {
		return x.ContextName
	}
	return ""
}

type ListNamespacesForContextRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Namespaces []string `protobuf:"bytes,1,rep,name=namespaces,proto3" json:"namespaces,omitempty"`
}

func (x *ListNamespacesForContextRes) Reset() {
	*x = ListNamespacesForContextRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_rpc_clusters_clusters_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListNamespacesForContextRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListNamespacesForContextRes) ProtoMessage() {}

func (x *ListNamespacesForContextRes) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_rpc_clusters_clusters_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListNamespacesForContextRes.ProtoReflect.Descriptor instead.
func (*ListNamespacesForContextRes) Descriptor() ([]byte, []int) {
	return file_pkg_rpc_clusters_clusters_proto_rawDescGZIP(), []int{4}
}

func (x *ListNamespacesForContextRes) GetNamespaces() []string {
	if x != nil {
		return x.Namespaces
	}
	return nil
}

type CrossNamespaceObjectReference struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ApiVersion string `protobuf:"bytes,1,opt,name=apiVersion,proto3" json:"apiVersion,omitempty"`
	Kind       string `protobuf:"bytes,2,opt,name=kind,proto3" json:"kind,omitempty"`
	Name       string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Namespace  string `protobuf:"bytes,4,opt,name=namespace,proto3" json:"namespace,omitempty"`
}

func (x *CrossNamespaceObjectReference) Reset() {
	*x = CrossNamespaceObjectReference{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_rpc_clusters_clusters_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CrossNamespaceObjectReference) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CrossNamespaceObjectReference) ProtoMessage() {}

func (x *CrossNamespaceObjectReference) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_rpc_clusters_clusters_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CrossNamespaceObjectReference.ProtoReflect.Descriptor instead.
func (*CrossNamespaceObjectReference) Descriptor() ([]byte, []int) {
	return file_pkg_rpc_clusters_clusters_proto_rawDescGZIP(), []int{5}
}

func (x *CrossNamespaceObjectReference) GetApiVersion() string {
	if x != nil {
		return x.ApiVersion
	}
	return ""
}

func (x *CrossNamespaceObjectReference) GetKind() string {
	if x != nil {
		return x.Kind
	}
	return ""
}

func (x *CrossNamespaceObjectReference) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CrossNamespaceObjectReference) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

type Condition struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type      string `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Status    string `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	Reason    string `protobuf:"bytes,3,opt,name=reason,proto3" json:"reason,omitempty"`
	Message   string `protobuf:"bytes,4,opt,name=message,proto3" json:"message,omitempty"`
	Timestamp string `protobuf:"bytes,5,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
}

func (x *Condition) Reset() {
	*x = Condition{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_rpc_clusters_clusters_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Condition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Condition) ProtoMessage() {}

func (x *Condition) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_rpc_clusters_clusters_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Condition.ProtoReflect.Descriptor instead.
func (*Condition) Descriptor() ([]byte, []int) {
	return file_pkg_rpc_clusters_clusters_proto_rawDescGZIP(), []int{6}
}

func (x *Condition) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Condition) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *Condition) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *Condition) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *Condition) GetTimestamp() string {
	if x != nil {
		return x.Timestamp
	}
	return ""
}

type GroupVersionKind struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Group   string `protobuf:"bytes,1,opt,name=group,proto3" json:"group,omitempty"`
	Kind    string `protobuf:"bytes,2,opt,name=kind,proto3" json:"kind,omitempty"`
	Version string `protobuf:"bytes,3,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *GroupVersionKind) Reset() {
	*x = GroupVersionKind{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_rpc_clusters_clusters_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupVersionKind) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupVersionKind) ProtoMessage() {}

func (x *GroupVersionKind) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_rpc_clusters_clusters_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupVersionKind.ProtoReflect.Descriptor instead.
func (*GroupVersionKind) Descriptor() ([]byte, []int) {
	return file_pkg_rpc_clusters_clusters_proto_rawDescGZIP(), []int{7}
}

func (x *GroupVersionKind) GetGroup() string {
	if x != nil {
		return x.Group
	}
	return ""
}

func (x *GroupVersionKind) GetKind() string {
	if x != nil {
		return x.Kind
	}
	return ""
}

func (x *GroupVersionKind) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

type SnapshotEntry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Namespace string              `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Kinds     []*GroupVersionKind `protobuf:"bytes,2,rep,name=kinds,proto3" json:"kinds,omitempty"`
}

func (x *SnapshotEntry) Reset() {
	*x = SnapshotEntry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_rpc_clusters_clusters_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SnapshotEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SnapshotEntry) ProtoMessage() {}

func (x *SnapshotEntry) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_rpc_clusters_clusters_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SnapshotEntry.ProtoReflect.Descriptor instead.
func (*SnapshotEntry) Descriptor() ([]byte, []int) {
	return file_pkg_rpc_clusters_clusters_proto_rawDescGZIP(), []int{8}
}

func (x *SnapshotEntry) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *SnapshotEntry) GetKinds() []*GroupVersionKind {
	if x != nil {
		return x.Kinds
	}
	return nil
}

type Kustomization struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name                  string           `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Namespace             string           `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`
	TargetNamespace       string           `protobuf:"bytes,3,opt,name=targetNamespace,proto3" json:"targetNamespace,omitempty"`
	Path                  string           `protobuf:"bytes,4,opt,name=path,proto3" json:"path,omitempty"`
	SourceRef             string           `protobuf:"bytes,5,opt,name=sourceRef,proto3" json:"sourceRef,omitempty"`
	Conditions            []*Condition     `protobuf:"bytes,6,rep,name=conditions,proto3" json:"conditions,omitempty"`
	Interval              string           `protobuf:"bytes,7,opt,name=interval,proto3" json:"interval,omitempty"`
	Prune                 bool             `protobuf:"varint,8,opt,name=prune,proto3" json:"prune,omitempty"`
	ReconcileRequestAt    string           `protobuf:"bytes,9,opt,name=reconcileRequestAt,proto3" json:"reconcileRequestAt,omitempty"`
	ReconcileAt           string           `protobuf:"bytes,10,opt,name=reconcileAt,proto3" json:"reconcileAt,omitempty"`
	SourceRefKind         Type             `protobuf:"varint,11,opt,name=sourceRefKind,proto3,enum=clusters.Type" json:"sourceRefKind,omitempty"`
	Snapshots             []*SnapshotEntry `protobuf:"bytes,12,rep,name=snapshots,proto3" json:"snapshots,omitempty"`
	LastAppliedRevision   string           `protobuf:"bytes,13,opt,name=lastAppliedRevision,proto3" json:"lastAppliedRevision,omitempty"`
	LastAttemptedRevision string           `protobuf:"bytes,14,opt,name=lastAttemptedRevision,proto3" json:"lastAttemptedRevision,omitempty"`
}

func (x *Kustomization) Reset() {
	*x = Kustomization{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_rpc_clusters_clusters_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Kustomization) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Kustomization) ProtoMessage() {}

func (x *Kustomization) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_rpc_clusters_clusters_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Kustomization.ProtoReflect.Descriptor instead.
func (*Kustomization) Descriptor() ([]byte, []int) {
	return file_pkg_rpc_clusters_clusters_proto_rawDescGZIP(), []int{9}
}

func (x *Kustomization) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Kustomization) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *Kustomization) GetTargetNamespace() string {
	if x != nil {
		return x.TargetNamespace
	}
	return ""
}

func (x *Kustomization) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *Kustomization) GetSourceRef() string {
	if x != nil {
		return x.SourceRef
	}
	return ""
}

func (x *Kustomization) GetConditions() []*Condition {
	if x != nil {
		return x.Conditions
	}
	return nil
}

func (x *Kustomization) GetInterval() string {
	if x != nil {
		return x.Interval
	}
	return ""
}

func (x *Kustomization) GetPrune() bool {
	if x != nil {
		return x.Prune
	}
	return false
}

func (x *Kustomization) GetReconcileRequestAt() string {
	if x != nil {
		return x.ReconcileRequestAt
	}
	return ""
}

func (x *Kustomization) GetReconcileAt() string {
	if x != nil {
		return x.ReconcileAt
	}
	return ""
}

func (x *Kustomization) GetSourceRefKind() Type {
	if x != nil {
		return x.SourceRefKind
	}
	return Type_Git
}

func (x *Kustomization) GetSnapshots() []*SnapshotEntry {
	if x != nil {
		return x.Snapshots
	}
	return nil
}

func (x *Kustomization) GetLastAppliedRevision() string {
	if x != nil {
		return x.LastAppliedRevision
	}
	return ""
}

func (x *Kustomization) GetLastAttemptedRevision() string {
	if x != nil {
		return x.LastAttemptedRevision
	}
	return ""
}

type ListKustomizationsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ContextName string `protobuf:"bytes,1,opt,name=contextName,proto3" json:"contextName,omitempty"`
	Namespace   string `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`
}

func (x *ListKustomizationsReq) Reset() {
	*x = ListKustomizationsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_rpc_clusters_clusters_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListKustomizationsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListKustomizationsReq) ProtoMessage() {}

func (x *ListKustomizationsReq) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_rpc_clusters_clusters_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListKustomizationsReq.ProtoReflect.Descriptor instead.
func (*ListKustomizationsReq) Descriptor() ([]byte, []int) {
	return file_pkg_rpc_clusters_clusters_proto_rawDescGZIP(), []int{10}
}

func (x *ListKustomizationsReq) GetContextName() string {
	if x != nil {
		return x.ContextName
	}
	return ""
}

func (x *ListKustomizationsReq) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

type ListKustomizationsRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Kustomizations []*Kustomization `protobuf:"bytes,1,rep,name=kustomizations,proto3" json:"kustomizations,omitempty"`
}

func (x *ListKustomizationsRes) Reset() {
	*x = ListKustomizationsRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_rpc_clusters_clusters_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListKustomizationsRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListKustomizationsRes) ProtoMessage() {}

func (x *ListKustomizationsRes) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_rpc_clusters_clusters_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListKustomizationsRes.ProtoReflect.Descriptor instead.
func (*ListKustomizationsRes) Descriptor() ([]byte, []int) {
	return file_pkg_rpc_clusters_clusters_proto_rawDescGZIP(), []int{11}
}

func (x *ListKustomizationsRes) GetKustomizations() []*Kustomization {
	if x != nil {
		return x.Kustomizations
	}
	return nil
}

type GitRepositoryRef struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Branch string `protobuf:"bytes,1,opt,name=branch,proto3" json:"branch,omitempty"`
	Tag    string `protobuf:"bytes,2,opt,name=tag,proto3" json:"tag,omitempty"`
	Semver string `protobuf:"bytes,3,opt,name=semver,proto3" json:"semver,omitempty"`
	Commit string `protobuf:"bytes,4,opt,name=commit,proto3" json:"commit,omitempty"`
}

func (x *GitRepositoryRef) Reset() {
	*x = GitRepositoryRef{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_rpc_clusters_clusters_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GitRepositoryRef) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GitRepositoryRef) ProtoMessage() {}

func (x *GitRepositoryRef) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_rpc_clusters_clusters_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GitRepositoryRef.ProtoReflect.Descriptor instead.
func (*GitRepositoryRef) Descriptor() ([]byte, []int) {
	return file_pkg_rpc_clusters_clusters_proto_rawDescGZIP(), []int{12}
}

func (x *GitRepositoryRef) GetBranch() string {
	if x != nil {
		return x.Branch
	}
	return ""
}

func (x *GitRepositoryRef) GetTag() string {
	if x != nil {
		return x.Tag
	}
	return ""
}

func (x *GitRepositoryRef) GetSemver() string {
	if x != nil {
		return x.Semver
	}
	return ""
}

func (x *GitRepositoryRef) GetCommit() string {
	if x != nil {
		return x.Commit
	}
	return ""
}

type Artifact struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Checksum     string `protobuf:"bytes,1,opt,name=checksum,proto3" json:"checksum,omitempty"`
	Lastupdateat int32  `protobuf:"varint,2,opt,name=lastupdateat,proto3" json:"lastupdateat,omitempty"`
	Path         string `protobuf:"bytes,3,opt,name=path,proto3" json:"path,omitempty"`
	Revision     string `protobuf:"bytes,4,opt,name=revision,proto3" json:"revision,omitempty"`
	Url          string `protobuf:"bytes,5,opt,name=url,proto3" json:"url,omitempty"`
}

func (x *Artifact) Reset() {
	*x = Artifact{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_rpc_clusters_clusters_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Artifact) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Artifact) ProtoMessage() {}

func (x *Artifact) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_rpc_clusters_clusters_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Artifact.ProtoReflect.Descriptor instead.
func (*Artifact) Descriptor() ([]byte, []int) {
	return file_pkg_rpc_clusters_clusters_proto_rawDescGZIP(), []int{13}
}

func (x *Artifact) GetChecksum() string {
	if x != nil {
		return x.Checksum
	}
	return ""
}

func (x *Artifact) GetLastupdateat() int32 {
	if x != nil {
		return x.Lastupdateat
	}
	return 0
}

func (x *Artifact) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *Artifact) GetRevision() string {
	if x != nil {
		return x.Revision
	}
	return ""
}

func (x *Artifact) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

type Source struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name              string            `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Url               string            `protobuf:"bytes,2,opt,name=url,proto3" json:"url,omitempty"`
	Reference         *GitRepositoryRef `protobuf:"bytes,3,opt,name=reference,proto3" json:"reference,omitempty"`
	Type              Type              `protobuf:"varint,4,opt,name=type,proto3,enum=clusters.Type" json:"type,omitempty"`
	Provider          string            `protobuf:"bytes,5,opt,name=provider,proto3" json:"provider,omitempty"`
	Bucketname        string            `protobuf:"bytes,6,opt,name=bucketname,proto3" json:"bucketname,omitempty"`
	Region            string            `protobuf:"bytes,7,opt,name=region,proto3" json:"region,omitempty"`
	Namespace         string            `protobuf:"bytes,8,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Gitimplementation string            `protobuf:"bytes,9,opt,name=gitimplementation,proto3" json:"gitimplementation,omitempty"`
	Timeout           string            `protobuf:"bytes,10,opt,name=timeout,proto3" json:"timeout,omitempty"`
	SecretRefName     string            `protobuf:"bytes,11,opt,name=secretRefName,proto3" json:"secretRefName,omitempty"`
	Conditions        []*Condition      `protobuf:"bytes,12,rep,name=conditions,proto3" json:"conditions,omitempty"`
	Artifact          *Artifact         `protobuf:"bytes,13,opt,name=artifact,proto3" json:"artifact,omitempty"`
}

func (x *Source) Reset() {
	*x = Source{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_rpc_clusters_clusters_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Source) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Source) ProtoMessage() {}

func (x *Source) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_rpc_clusters_clusters_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Source.ProtoReflect.Descriptor instead.
func (*Source) Descriptor() ([]byte, []int) {
	return file_pkg_rpc_clusters_clusters_proto_rawDescGZIP(), []int{14}
}

func (x *Source) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Source) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *Source) GetReference() *GitRepositoryRef {
	if x != nil {
		return x.Reference
	}
	return nil
}

func (x *Source) GetType() Type {
	if x != nil {
		return x.Type
	}
	return Type_Git
}

func (x *Source) GetProvider() string {
	if x != nil {
		return x.Provider
	}
	return ""
}

func (x *Source) GetBucketname() string {
	if x != nil {
		return x.Bucketname
	}
	return ""
}

func (x *Source) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *Source) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *Source) GetGitimplementation() string {
	if x != nil {
		return x.Gitimplementation
	}
	return ""
}

func (x *Source) GetTimeout() string {
	if x != nil {
		return x.Timeout
	}
	return ""
}

func (x *Source) GetSecretRefName() string {
	if x != nil {
		return x.SecretRefName
	}
	return ""
}

func (x *Source) GetConditions() []*Condition {
	if x != nil {
		return x.Conditions
	}
	return nil
}

func (x *Source) GetArtifact() *Artifact {
	if x != nil {
		return x.Artifact
	}
	return nil
}

type ListSourcesReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ContextName string `protobuf:"bytes,1,opt,name=contextName,proto3" json:"contextName,omitempty"`
	Namespace   string `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`
	SourceType  Type   `protobuf:"varint,3,opt,name=sourceType,proto3,enum=clusters.Type" json:"sourceType,omitempty"`
}

func (x *ListSourcesReq) Reset() {
	*x = ListSourcesReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_rpc_clusters_clusters_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListSourcesReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSourcesReq) ProtoMessage() {}

func (x *ListSourcesReq) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_rpc_clusters_clusters_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSourcesReq.ProtoReflect.Descriptor instead.
func (*ListSourcesReq) Descriptor() ([]byte, []int) {
	return file_pkg_rpc_clusters_clusters_proto_rawDescGZIP(), []int{15}
}

func (x *ListSourcesReq) GetContextName() string {
	if x != nil {
		return x.ContextName
	}
	return ""
}

func (x *ListSourcesReq) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *ListSourcesReq) GetSourceType() Type {
	if x != nil {
		return x.SourceType
	}
	return Type_Git
}

type ListSourcesRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sources []*Source `protobuf:"bytes,1,rep,name=sources,proto3" json:"sources,omitempty"`
}

func (x *ListSourcesRes) Reset() {
	*x = ListSourcesRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_rpc_clusters_clusters_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListSourcesRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSourcesRes) ProtoMessage() {}

func (x *ListSourcesRes) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_rpc_clusters_clusters_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSourcesRes.ProtoReflect.Descriptor instead.
func (*ListSourcesRes) Descriptor() ([]byte, []int) {
	return file_pkg_rpc_clusters_clusters_proto_rawDescGZIP(), []int{16}
}

func (x *ListSourcesRes) GetSources() []*Source {
	if x != nil {
		return x.Sources
	}
	return nil
}

type SyncSourceReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ContextName string `protobuf:"bytes,1,opt,name=contextName,proto3" json:"contextName,omitempty"`
	Namespace   string `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`
	SourceName  string `protobuf:"bytes,3,opt,name=sourceName,proto3" json:"sourceName,omitempty"`
	SourceType  Type   `protobuf:"varint,4,opt,name=sourceType,proto3,enum=clusters.Type" json:"sourceType,omitempty"`
}

func (x *SyncSourceReq) Reset() {
	*x = SyncSourceReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_rpc_clusters_clusters_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SyncSourceReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncSourceReq) ProtoMessage() {}

func (x *SyncSourceReq) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_rpc_clusters_clusters_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncSourceReq.ProtoReflect.Descriptor instead.
func (*SyncSourceReq) Descriptor() ([]byte, []int) {
	return file_pkg_rpc_clusters_clusters_proto_rawDescGZIP(), []int{17}
}

func (x *SyncSourceReq) GetContextName() string {
	if x != nil {
		return x.ContextName
	}
	return ""
}

func (x *SyncSourceReq) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *SyncSourceReq) GetSourceName() string {
	if x != nil {
		return x.SourceName
	}
	return ""
}

func (x *SyncSourceReq) GetSourceType() Type {
	if x != nil {
		return x.SourceType
	}
	return Type_Git
}

type SyncSourceRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Source *Source `protobuf:"bytes,1,opt,name=source,proto3" json:"source,omitempty"`
}

func (x *SyncSourceRes) Reset() {
	*x = SyncSourceRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_rpc_clusters_clusters_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SyncSourceRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncSourceRes) ProtoMessage() {}

func (x *SyncSourceRes) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_rpc_clusters_clusters_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncSourceRes.ProtoReflect.Descriptor instead.
func (*SyncSourceRes) Descriptor() ([]byte, []int) {
	return file_pkg_rpc_clusters_clusters_proto_rawDescGZIP(), []int{18}
}

func (x *SyncSourceRes) GetSource() *Source {
	if x != nil {
		return x.Source
	}
	return nil
}

type SyncKustomizationReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ContextName       string `protobuf:"bytes,1,opt,name=contextName,proto3" json:"contextName,omitempty"`
	Namespace         string `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`
	KustomizationName string `protobuf:"bytes,3,opt,name=kustomizationName,proto3" json:"kustomizationName,omitempty"`
	WithSource        bool   `protobuf:"varint,4,opt,name=withSource,proto3" json:"withSource,omitempty"`
}

func (x *SyncKustomizationReq) Reset() {
	*x = SyncKustomizationReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_rpc_clusters_clusters_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SyncKustomizationReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncKustomizationReq) ProtoMessage() {}

func (x *SyncKustomizationReq) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_rpc_clusters_clusters_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncKustomizationReq.ProtoReflect.Descriptor instead.
func (*SyncKustomizationReq) Descriptor() ([]byte, []int) {
	return file_pkg_rpc_clusters_clusters_proto_rawDescGZIP(), []int{19}
}

func (x *SyncKustomizationReq) GetContextName() string {
	if x != nil {
		return x.ContextName
	}
	return ""
}

func (x *SyncKustomizationReq) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *SyncKustomizationReq) GetKustomizationName() string {
	if x != nil {
		return x.KustomizationName
	}
	return ""
}

func (x *SyncKustomizationReq) GetWithSource() bool {
	if x != nil {
		return x.WithSource
	}
	return false
}

type SyncKustomizationRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Kustomization *Kustomization `protobuf:"bytes,1,opt,name=kustomization,proto3" json:"kustomization,omitempty"`
}

func (x *SyncKustomizationRes) Reset() {
	*x = SyncKustomizationRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_rpc_clusters_clusters_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SyncKustomizationRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncKustomizationRes) ProtoMessage() {}

func (x *SyncKustomizationRes) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_rpc_clusters_clusters_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncKustomizationRes.ProtoReflect.Descriptor instead.
func (*SyncKustomizationRes) Descriptor() ([]byte, []int) {
	return file_pkg_rpc_clusters_clusters_proto_rawDescGZIP(), []int{20}
}

func (x *SyncKustomizationRes) GetKustomization() *Kustomization {
	if x != nil {
		return x.Kustomization
	}
	return nil
}

type HelmRelease struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name            string       `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Namespace       string       `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Interval        string       `protobuf:"bytes,3,opt,name=interval,proto3" json:"interval,omitempty"`
	ChartName       string       `protobuf:"bytes,5,opt,name=chartName,proto3" json:"chartName,omitempty"`
	Version         string       `protobuf:"bytes,6,opt,name=version,proto3" json:"version,omitempty"`
	SourceKind      string       `protobuf:"bytes,7,opt,name=sourceKind,proto3" json:"sourceKind,omitempty"`
	SourceName      string       `protobuf:"bytes,8,opt,name=sourceName,proto3" json:"sourceName,omitempty"`
	SourceNamespace string       `protobuf:"bytes,9,opt,name=sourceNamespace,proto3" json:"sourceNamespace,omitempty"`
	Conditions      []*Condition `protobuf:"bytes,12,rep,name=conditions,proto3" json:"conditions,omitempty"`
}

func (x *HelmRelease) Reset() {
	*x = HelmRelease{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_rpc_clusters_clusters_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HelmRelease) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HelmRelease) ProtoMessage() {}

func (x *HelmRelease) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_rpc_clusters_clusters_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HelmRelease.ProtoReflect.Descriptor instead.
func (*HelmRelease) Descriptor() ([]byte, []int) {
	return file_pkg_rpc_clusters_clusters_proto_rawDescGZIP(), []int{21}
}

func (x *HelmRelease) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *HelmRelease) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *HelmRelease) GetInterval() string {
	if x != nil {
		return x.Interval
	}
	return ""
}

func (x *HelmRelease) GetChartName() string {
	if x != nil {
		return x.ChartName
	}
	return ""
}

func (x *HelmRelease) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *HelmRelease) GetSourceKind() string {
	if x != nil {
		return x.SourceKind
	}
	return ""
}

func (x *HelmRelease) GetSourceName() string {
	if x != nil {
		return x.SourceName
	}
	return ""
}

func (x *HelmRelease) GetSourceNamespace() string {
	if x != nil {
		return x.SourceNamespace
	}
	return ""
}

func (x *HelmRelease) GetConditions() []*Condition {
	if x != nil {
		return x.Conditions
	}
	return nil
}

type ListHelmReleasesReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ContextName string `protobuf:"bytes,1,opt,name=contextName,proto3" json:"contextName,omitempty"`
	Namespace   string `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`
}

func (x *ListHelmReleasesReq) Reset() {
	*x = ListHelmReleasesReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_rpc_clusters_clusters_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListHelmReleasesReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListHelmReleasesReq) ProtoMessage() {}

func (x *ListHelmReleasesReq) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_rpc_clusters_clusters_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListHelmReleasesReq.ProtoReflect.Descriptor instead.
func (*ListHelmReleasesReq) Descriptor() ([]byte, []int) {
	return file_pkg_rpc_clusters_clusters_proto_rawDescGZIP(), []int{22}
}

func (x *ListHelmReleasesReq) GetContextName() string {
	if x != nil {
		return x.ContextName
	}
	return ""
}

func (x *ListHelmReleasesReq) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

type ListHelmReleasesRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HelmReleases []*HelmRelease `protobuf:"bytes,1,rep,name=helm_releases,json=helmReleases,proto3" json:"helm_releases,omitempty"`
}

func (x *ListHelmReleasesRes) Reset() {
	*x = ListHelmReleasesRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_rpc_clusters_clusters_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListHelmReleasesRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListHelmReleasesRes) ProtoMessage() {}

func (x *ListHelmReleasesRes) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_rpc_clusters_clusters_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListHelmReleasesRes.ProtoReflect.Descriptor instead.
func (*ListHelmReleasesRes) Descriptor() ([]byte, []int) {
	return file_pkg_rpc_clusters_clusters_proto_rawDescGZIP(), []int{23}
}

func (x *ListHelmReleasesRes) GetHelmReleases() []*HelmRelease {
	if x != nil {
		return x.HelmReleases
	}
	return nil
}

type SyncHelmReleaseReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ContextName     string `protobuf:"bytes,1,opt,name=contextName,proto3" json:"contextName,omitempty"`
	Namespace       string `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`
	HelmReleaseName string `protobuf:"bytes,3,opt,name=helmReleaseName,proto3" json:"helmReleaseName,omitempty"`
}

func (x *SyncHelmReleaseReq) Reset() {
	*x = SyncHelmReleaseReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_rpc_clusters_clusters_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SyncHelmReleaseReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncHelmReleaseReq) ProtoMessage() {}

func (x *SyncHelmReleaseReq) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_rpc_clusters_clusters_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncHelmReleaseReq.ProtoReflect.Descriptor instead.
func (*SyncHelmReleaseReq) Descriptor() ([]byte, []int) {
	return file_pkg_rpc_clusters_clusters_proto_rawDescGZIP(), []int{24}
}

func (x *SyncHelmReleaseReq) GetContextName() string {
	if x != nil {
		return x.ContextName
	}
	return ""
}

func (x *SyncHelmReleaseReq) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *SyncHelmReleaseReq) GetHelmReleaseName() string {
	if x != nil {
		return x.HelmReleaseName
	}
	return ""
}

type SyncHelmReleaseRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Helmrelease *HelmRelease `protobuf:"bytes,1,opt,name=helmrelease,proto3" json:"helmrelease,omitempty"`
}

func (x *SyncHelmReleaseRes) Reset() {
	*x = SyncHelmReleaseRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_rpc_clusters_clusters_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SyncHelmReleaseRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncHelmReleaseRes) ProtoMessage() {}

func (x *SyncHelmReleaseRes) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_rpc_clusters_clusters_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncHelmReleaseRes.ProtoReflect.Descriptor instead.
func (*SyncHelmReleaseRes) Descriptor() ([]byte, []int) {
	return file_pkg_rpc_clusters_clusters_proto_rawDescGZIP(), []int{25}
}

func (x *SyncHelmReleaseRes) GetHelmrelease() *HelmRelease {
	if x != nil {
		return x.Helmrelease
	}
	return nil
}

type ImagePolicy struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name               string       `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Namespace          string       `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`
	ImageRepositoryRef string       `protobuf:"bytes,3,opt,name=imageRepositoryRef,proto3" json:"imageRepositoryRef,omitempty"`
	PolicyKind         string       `protobuf:"bytes,4,opt,name=policyKind,proto3" json:"policyKind,omitempty"`
	Policy             string       `protobuf:"bytes,5,opt,name=policy,proto3" json:"policy,omitempty"`
	FilterTagsPattern  string       `protobuf:"bytes,6,opt,name=filterTagsPattern,proto3" json:"filterTagsPattern,omitempty"`
	FilterTagsExtract  string       `protobuf:"bytes,7,opt,name=filterTagsExtract,proto3" json:"filterTagsExtract,omitempty"`
	LatestImage        string       `protobuf:"bytes,8,opt,name=latestImage,proto3" json:"latestImage,omitempty"`
	Conditions         []*Condition `protobuf:"bytes,9,rep,name=conditions,proto3" json:"conditions,omitempty"`
}

func (x *ImagePolicy) Reset() {
	*x = ImagePolicy{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_rpc_clusters_clusters_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ImagePolicy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImagePolicy) ProtoMessage() {}

func (x *ImagePolicy) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_rpc_clusters_clusters_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImagePolicy.ProtoReflect.Descriptor instead.
func (*ImagePolicy) Descriptor() ([]byte, []int) {
	return file_pkg_rpc_clusters_clusters_proto_rawDescGZIP(), []int{26}
}

func (x *ImagePolicy) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ImagePolicy) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *ImagePolicy) GetImageRepositoryRef() string {
	if x != nil {
		return x.ImageRepositoryRef
	}
	return ""
}

func (x *ImagePolicy) GetPolicyKind() string {
	if x != nil {
		return x.PolicyKind
	}
	return ""
}

func (x *ImagePolicy) GetPolicy() string {
	if x != nil {
		return x.Policy
	}
	return ""
}

func (x *ImagePolicy) GetFilterTagsPattern() string {
	if x != nil {
		return x.FilterTagsPattern
	}
	return ""
}

func (x *ImagePolicy) GetFilterTagsExtract() string {
	if x != nil {
		return x.FilterTagsExtract
	}
	return ""
}

func (x *ImagePolicy) GetLatestImage() string {
	if x != nil {
		return x.LatestImage
	}
	return ""
}

func (x *ImagePolicy) GetConditions() []*Condition {
	if x != nil {
		return x.Conditions
	}
	return nil
}

type ListImagePoliciesReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ContextName string `protobuf:"bytes,1,opt,name=contextName,proto3" json:"contextName,omitempty"`
	Namespace   string `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`
}

func (x *ListImagePoliciesReq) Reset() {
	*x = ListImagePoliciesReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_rpc_clusters_clusters_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListImagePoliciesReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListImagePoliciesReq) ProtoMessage() {}

func (x *ListImagePoliciesReq) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_rpc_clusters_clusters_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListImagePoliciesReq.ProtoReflect.Descriptor instead.
func (*ListImagePoliciesReq) Descriptor() ([]byte, []int) {
	return file_pkg_rpc_clusters_clusters_proto_rawDescGZIP(), []int{27}
}

func (x *ListImagePoliciesReq) GetContextName() string {
	if x != nil {
		return x.ContextName
	}
	return ""
}

func (x *ListImagePoliciesReq) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

type ListImagePoliciesRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ImagePolicies []*ImagePolicy `protobuf:"bytes,1,rep,name=image_policies,json=imagePolicies,proto3" json:"image_policies,omitempty"`
}

func (x *ListImagePoliciesRes) Reset() {
	*x = ListImagePoliciesRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_rpc_clusters_clusters_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListImagePoliciesRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListImagePoliciesRes) ProtoMessage() {}

func (x *ListImagePoliciesRes) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_rpc_clusters_clusters_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListImagePoliciesRes.ProtoReflect.Descriptor instead.
func (*ListImagePoliciesRes) Descriptor() ([]byte, []int) {
	return file_pkg_rpc_clusters_clusters_proto_rawDescGZIP(), []int{28}
}

func (x *ListImagePoliciesRes) GetImagePolicies() []*ImagePolicy {
	if x != nil {
		return x.ImagePolicies
	}
	return nil
}

type ImageRepository struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name                   string       `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Namespace              string       `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Image                  string       `protobuf:"bytes,3,opt,name=image,proto3" json:"image,omitempty"`
	SecretRef              string       `protobuf:"bytes,4,opt,name=secretRef,proto3" json:"secretRef,omitempty"`
	Conditions             []*Condition `protobuf:"bytes,5,rep,name=conditions,proto3" json:"conditions,omitempty"`
	Interval               string       `protobuf:"bytes,6,opt,name=interval,proto3" json:"interval,omitempty"`
	Timeout                string       `protobuf:"bytes,7,opt,name=timeout,proto3" json:"timeout,omitempty"`
	CertSecretRef          string       `protobuf:"bytes,8,opt,name=certSecretRef,proto3" json:"certSecretRef,omitempty"`
	Suspend                bool         `protobuf:"varint,9,opt,name=suspend,proto3" json:"suspend,omitempty"`
	ReconcileRequestAt     string       `protobuf:"bytes,10,opt,name=reconcileRequestAt,proto3" json:"reconcileRequestAt,omitempty"`
	ReconcileAt            string       `protobuf:"bytes,11,opt,name=reconcileAt,proto3" json:"reconcileAt,omitempty"`
	LastScanResultTagCount int32        `protobuf:"varint,12,opt,name=lastScanResultTagCount,proto3" json:"lastScanResultTagCount,omitempty"`
	LastScanResultScanTime int32        `protobuf:"varint,13,opt,name=lastScanResultScanTime,proto3" json:"lastScanResultScanTime,omitempty"`
}

func (x *ImageRepository) Reset() {
	*x = ImageRepository{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_rpc_clusters_clusters_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ImageRepository) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImageRepository) ProtoMessage() {}

func (x *ImageRepository) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_rpc_clusters_clusters_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImageRepository.ProtoReflect.Descriptor instead.
func (*ImageRepository) Descriptor() ([]byte, []int) {
	return file_pkg_rpc_clusters_clusters_proto_rawDescGZIP(), []int{29}
}

func (x *ImageRepository) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ImageRepository) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *ImageRepository) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

func (x *ImageRepository) GetSecretRef() string {
	if x != nil {
		return x.SecretRef
	}
	return ""
}

func (x *ImageRepository) GetConditions() []*Condition {
	if x != nil {
		return x.Conditions
	}
	return nil
}

func (x *ImageRepository) GetInterval() string {
	if x != nil {
		return x.Interval
	}
	return ""
}

func (x *ImageRepository) GetTimeout() string {
	if x != nil {
		return x.Timeout
	}
	return ""
}

func (x *ImageRepository) GetCertSecretRef() string {
	if x != nil {
		return x.CertSecretRef
	}
	return ""
}

func (x *ImageRepository) GetSuspend() bool {
	if x != nil {
		return x.Suspend
	}
	return false
}

func (x *ImageRepository) GetReconcileRequestAt() string {
	if x != nil {
		return x.ReconcileRequestAt
	}
	return ""
}

func (x *ImageRepository) GetReconcileAt() string {
	if x != nil {
		return x.ReconcileAt
	}
	return ""
}

func (x *ImageRepository) GetLastScanResultTagCount() int32 {
	if x != nil {
		return x.LastScanResultTagCount
	}
	return 0
}

func (x *ImageRepository) GetLastScanResultScanTime() int32 {
	if x != nil {
		return x.LastScanResultScanTime
	}
	return 0
}

type ListImageRepositoriesReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ContextName string `protobuf:"bytes,1,opt,name=contextName,proto3" json:"contextName,omitempty"`
	Namespace   string `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`
}

func (x *ListImageRepositoriesReq) Reset() {
	*x = ListImageRepositoriesReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_rpc_clusters_clusters_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListImageRepositoriesReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListImageRepositoriesReq) ProtoMessage() {}

func (x *ListImageRepositoriesReq) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_rpc_clusters_clusters_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListImageRepositoriesReq.ProtoReflect.Descriptor instead.
func (*ListImageRepositoriesReq) Descriptor() ([]byte, []int) {
	return file_pkg_rpc_clusters_clusters_proto_rawDescGZIP(), []int{30}
}

func (x *ListImageRepositoriesReq) GetContextName() string {
	if x != nil {
		return x.ContextName
	}
	return ""
}

func (x *ListImageRepositoriesReq) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

type ListImageRepositoriesRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ImageRepositories []*ImageRepository `protobuf:"bytes,1,rep,name=image_repositories,json=imageRepositories,proto3" json:"image_repositories,omitempty"`
}

func (x *ListImageRepositoriesRes) Reset() {
	*x = ListImageRepositoriesRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_rpc_clusters_clusters_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListImageRepositoriesRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListImageRepositoriesRes) ProtoMessage() {}

func (x *ListImageRepositoriesRes) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_rpc_clusters_clusters_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListImageRepositoriesRes.ProtoReflect.Descriptor instead.
func (*ListImageRepositoriesRes) Descriptor() ([]byte, []int) {
	return file_pkg_rpc_clusters_clusters_proto_rawDescGZIP(), []int{31}
}

func (x *ListImageRepositoriesRes) GetImageRepositories() []*ImageRepository {
	if x != nil {
		return x.ImageRepositories
	}
	return nil
}

type SyncImageRepositoryReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ContextName         string `protobuf:"bytes,1,opt,name=contextName,proto3" json:"contextName,omitempty"`
	Namespace           string `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`
	ImageRepositoryName string `protobuf:"bytes,3,opt,name=imageRepositoryName,proto3" json:"imageRepositoryName,omitempty"`
}

func (x *SyncImageRepositoryReq) Reset() {
	*x = SyncImageRepositoryReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_rpc_clusters_clusters_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SyncImageRepositoryReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncImageRepositoryReq) ProtoMessage() {}

func (x *SyncImageRepositoryReq) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_rpc_clusters_clusters_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncImageRepositoryReq.ProtoReflect.Descriptor instead.
func (*SyncImageRepositoryReq) Descriptor() ([]byte, []int) {
	return file_pkg_rpc_clusters_clusters_proto_rawDescGZIP(), []int{32}
}

func (x *SyncImageRepositoryReq) GetContextName() string {
	if x != nil {
		return x.ContextName
	}
	return ""
}

func (x *SyncImageRepositoryReq) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *SyncImageRepositoryReq) GetImageRepositoryName() string {
	if x != nil {
		return x.ImageRepositoryName
	}
	return ""
}

type SyncImageRepositoryRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Imagerepository *ImageRepository `protobuf:"bytes,1,opt,name=imagerepository,proto3" json:"imagerepository,omitempty"`
}

func (x *SyncImageRepositoryRes) Reset() {
	*x = SyncImageRepositoryRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_rpc_clusters_clusters_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SyncImageRepositoryRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncImageRepositoryRes) ProtoMessage() {}

func (x *SyncImageRepositoryRes) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_rpc_clusters_clusters_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncImageRepositoryRes.ProtoReflect.Descriptor instead.
func (*SyncImageRepositoryRes) Descriptor() ([]byte, []int) {
	return file_pkg_rpc_clusters_clusters_proto_rawDescGZIP(), []int{33}
}

func (x *SyncImageRepositoryRes) GetImagerepository() *ImageRepository {
	if x != nil {
		return x.Imagerepository
	}
	return nil
}

type ImageUpdateAutomation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name                  string       `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Namespace             string       `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`
	SourceRef             string       `protobuf:"bytes,3,opt,name=sourceRef,proto3" json:"sourceRef,omitempty"`
	Conditions            []*Condition `protobuf:"bytes,4,rep,name=conditions,proto3" json:"conditions,omitempty"`
	Interval              string       `protobuf:"bytes,5,opt,name=interval,proto3" json:"interval,omitempty"`
	UpdatePath            string       `protobuf:"bytes,6,opt,name=updatePath,proto3" json:"updatePath,omitempty"`
	UpdateStrategy        string       `protobuf:"bytes,7,opt,name=updateStrategy,proto3" json:"updateStrategy,omitempty"`
	Suspend               bool         `protobuf:"varint,8,opt,name=suspend,proto3" json:"suspend,omitempty"`
	ReconcileRequestAt    string       `protobuf:"bytes,9,opt,name=reconcileRequestAt,proto3" json:"reconcileRequestAt,omitempty"`
	ReconcileAt           string       `protobuf:"bytes,10,opt,name=reconcileAt,proto3" json:"reconcileAt,omitempty"`
	SourceRefKind         Type         `protobuf:"varint,11,opt,name=sourceRefKind,proto3,enum=clusters.Type" json:"sourceRefKind,omitempty"`
	LastAutomationRunTime int32        `protobuf:"varint,12,opt,name=lastAutomationRunTime,proto3" json:"lastAutomationRunTime,omitempty"`
	LastPushCommit        string       `protobuf:"bytes,13,opt,name=lastPushCommit,proto3" json:"lastPushCommit,omitempty"`
	LastPushTime          int32        `protobuf:"varint,14,opt,name=lastPushTime,proto3" json:"lastPushTime,omitempty"`
}

func (x *ImageUpdateAutomation) Reset() {
	*x = ImageUpdateAutomation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_rpc_clusters_clusters_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ImageUpdateAutomation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImageUpdateAutomation) ProtoMessage() {}

func (x *ImageUpdateAutomation) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_rpc_clusters_clusters_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImageUpdateAutomation.ProtoReflect.Descriptor instead.
func (*ImageUpdateAutomation) Descriptor() ([]byte, []int) {
	return file_pkg_rpc_clusters_clusters_proto_rawDescGZIP(), []int{34}
}

func (x *ImageUpdateAutomation) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ImageUpdateAutomation) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *ImageUpdateAutomation) GetSourceRef() string {
	if x != nil {
		return x.SourceRef
	}
	return ""
}

func (x *ImageUpdateAutomation) GetConditions() []*Condition {
	if x != nil {
		return x.Conditions
	}
	return nil
}

func (x *ImageUpdateAutomation) GetInterval() string {
	if x != nil {
		return x.Interval
	}
	return ""
}

func (x *ImageUpdateAutomation) GetUpdatePath() string {
	if x != nil {
		return x.UpdatePath
	}
	return ""
}

func (x *ImageUpdateAutomation) GetUpdateStrategy() string {
	if x != nil {
		return x.UpdateStrategy
	}
	return ""
}

func (x *ImageUpdateAutomation) GetSuspend() bool {
	if x != nil {
		return x.Suspend
	}
	return false
}

func (x *ImageUpdateAutomation) GetReconcileRequestAt() string {
	if x != nil {
		return x.ReconcileRequestAt
	}
	return ""
}

func (x *ImageUpdateAutomation) GetReconcileAt() string {
	if x != nil {
		return x.ReconcileAt
	}
	return ""
}

func (x *ImageUpdateAutomation) GetSourceRefKind() Type {
	if x != nil {
		return x.SourceRefKind
	}
	return Type_Git
}

func (x *ImageUpdateAutomation) GetLastAutomationRunTime() int32 {
	if x != nil {
		return x.LastAutomationRunTime
	}
	return 0
}

func (x *ImageUpdateAutomation) GetLastPushCommit() string {
	if x != nil {
		return x.LastPushCommit
	}
	return ""
}

func (x *ImageUpdateAutomation) GetLastPushTime() int32 {
	if x != nil {
		return x.LastPushTime
	}
	return 0
}

type ListImageUpdateAutomationsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ContextName string `protobuf:"bytes,1,opt,name=contextName,proto3" json:"contextName,omitempty"`
	Namespace   string `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`
}

func (x *ListImageUpdateAutomationsReq) Reset() {
	*x = ListImageUpdateAutomationsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_rpc_clusters_clusters_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListImageUpdateAutomationsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListImageUpdateAutomationsReq) ProtoMessage() {}

func (x *ListImageUpdateAutomationsReq) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_rpc_clusters_clusters_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListImageUpdateAutomationsReq.ProtoReflect.Descriptor instead.
func (*ListImageUpdateAutomationsReq) Descriptor() ([]byte, []int) {
	return file_pkg_rpc_clusters_clusters_proto_rawDescGZIP(), []int{35}
}

func (x *ListImageUpdateAutomationsReq) GetContextName() string {
	if x != nil {
		return x.ContextName
	}
	return ""
}

func (x *ListImageUpdateAutomationsReq) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

type ListImageUpdateAutomationsRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ImageUpdateAutomations []*ImageUpdateAutomation `protobuf:"bytes,1,rep,name=image_update_automations,json=imageUpdateAutomations,proto3" json:"image_update_automations,omitempty"`
}

func (x *ListImageUpdateAutomationsRes) Reset() {
	*x = ListImageUpdateAutomationsRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_rpc_clusters_clusters_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListImageUpdateAutomationsRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListImageUpdateAutomationsRes) ProtoMessage() {}

func (x *ListImageUpdateAutomationsRes) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_rpc_clusters_clusters_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListImageUpdateAutomationsRes.ProtoReflect.Descriptor instead.
func (*ListImageUpdateAutomationsRes) Descriptor() ([]byte, []int) {
	return file_pkg_rpc_clusters_clusters_proto_rawDescGZIP(), []int{36}
}

func (x *ListImageUpdateAutomationsRes) GetImageUpdateAutomations() []*ImageUpdateAutomation {
	if x != nil {
		return x.ImageUpdateAutomations
	}
	return nil
}

type SyncImageUpdateAutomationReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ContextName               string `protobuf:"bytes,1,opt,name=contextName,proto3" json:"contextName,omitempty"`
	Namespace                 string `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`
	ImageUpdateAutomationName string `protobuf:"bytes,3,opt,name=imageUpdateAutomationName,proto3" json:"imageUpdateAutomationName,omitempty"`
}

func (x *SyncImageUpdateAutomationReq) Reset() {
	*x = SyncImageUpdateAutomationReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_rpc_clusters_clusters_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SyncImageUpdateAutomationReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncImageUpdateAutomationReq) ProtoMessage() {}

func (x *SyncImageUpdateAutomationReq) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_rpc_clusters_clusters_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncImageUpdateAutomationReq.ProtoReflect.Descriptor instead.
func (*SyncImageUpdateAutomationReq) Descriptor() ([]byte, []int) {
	return file_pkg_rpc_clusters_clusters_proto_rawDescGZIP(), []int{37}
}

func (x *SyncImageUpdateAutomationReq) GetContextName() string {
	if x != nil {
		return x.ContextName
	}
	return ""
}

func (x *SyncImageUpdateAutomationReq) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *SyncImageUpdateAutomationReq) GetImageUpdateAutomationName() string {
	if x != nil {
		return x.ImageUpdateAutomationName
	}
	return ""
}

type SyncImageUpdateAutomationRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Imageupdateautomation *ImageUpdateAutomation `protobuf:"bytes,1,opt,name=imageupdateautomation,proto3" json:"imageupdateautomation,omitempty"`
}

func (x *SyncImageUpdateAutomationRes) Reset() {
	*x = SyncImageUpdateAutomationRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_rpc_clusters_clusters_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SyncImageUpdateAutomationRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncImageUpdateAutomationRes) ProtoMessage() {}

func (x *SyncImageUpdateAutomationRes) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_rpc_clusters_clusters_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncImageUpdateAutomationRes.ProtoReflect.Descriptor instead.
func (*SyncImageUpdateAutomationRes) Descriptor() ([]byte, []int) {
	return file_pkg_rpc_clusters_clusters_proto_rawDescGZIP(), []int{38}
}

func (x *SyncImageUpdateAutomationRes) GetImageupdateautomation() *ImageUpdateAutomation {
	if x != nil {
		return x.Imageupdateautomation
	}
	return nil
}

type Alert struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name          string                           `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Namespace     string                           `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`
	ProviderRef   string                           `protobuf:"bytes,3,opt,name=providerRef,proto3" json:"providerRef,omitempty"`
	EventSeverity string                           `protobuf:"bytes,4,opt,name=eventSeverity,proto3" json:"eventSeverity,omitempty"`
	EventSources  []*CrossNamespaceObjectReference `protobuf:"bytes,5,rep,name=eventSources,proto3" json:"eventSources,omitempty"`
	ExclusionList []string                         `protobuf:"bytes,6,rep,name=exclusionList,proto3" json:"exclusionList,omitempty"`
	Summary       string                           `protobuf:"bytes,7,opt,name=summary,proto3" json:"summary,omitempty"`
	Suspend       bool                             `protobuf:"varint,8,opt,name=suspend,proto3" json:"suspend,omitempty"`
	Conditions    []*Condition                     `protobuf:"bytes,9,rep,name=conditions,proto3" json:"conditions,omitempty"`
}

func (x *Alert) Reset() {
	*x = Alert{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_rpc_clusters_clusters_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Alert) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Alert) ProtoMessage() {}

func (x *Alert) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_rpc_clusters_clusters_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Alert.ProtoReflect.Descriptor instead.
func (*Alert) Descriptor() ([]byte, []int) {
	return file_pkg_rpc_clusters_clusters_proto_rawDescGZIP(), []int{39}
}

func (x *Alert) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Alert) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *Alert) GetProviderRef() string {
	if x != nil {
		return x.ProviderRef
	}
	return ""
}

func (x *Alert) GetEventSeverity() string {
	if x != nil {
		return x.EventSeverity
	}
	return ""
}

func (x *Alert) GetEventSources() []*CrossNamespaceObjectReference {
	if x != nil {
		return x.EventSources
	}
	return nil
}

func (x *Alert) GetExclusionList() []string {
	if x != nil {
		return x.ExclusionList
	}
	return nil
}

func (x *Alert) GetSummary() string {
	if x != nil {
		return x.Summary
	}
	return ""
}

func (x *Alert) GetSuspend() bool {
	if x != nil {
		return x.Suspend
	}
	return false
}

func (x *Alert) GetConditions() []*Condition {
	if x != nil {
		return x.Conditions
	}
	return nil
}

type ListAlertsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ContextName string `protobuf:"bytes,1,opt,name=contextName,proto3" json:"contextName,omitempty"`
	Namespace   string `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`
}

func (x *ListAlertsReq) Reset() {
	*x = ListAlertsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_rpc_clusters_clusters_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAlertsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAlertsReq) ProtoMessage() {}

func (x *ListAlertsReq) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_rpc_clusters_clusters_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAlertsReq.ProtoReflect.Descriptor instead.
func (*ListAlertsReq) Descriptor() ([]byte, []int) {
	return file_pkg_rpc_clusters_clusters_proto_rawDescGZIP(), []int{40}
}

func (x *ListAlertsReq) GetContextName() string {
	if x != nil {
		return x.ContextName
	}
	return ""
}

func (x *ListAlertsReq) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

type ListAlertsRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Alerts []*Alert `protobuf:"bytes,1,rep,name=alerts,proto3" json:"alerts,omitempty"`
}

func (x *ListAlertsRes) Reset() {
	*x = ListAlertsRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_rpc_clusters_clusters_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAlertsRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAlertsRes) ProtoMessage() {}

func (x *ListAlertsRes) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_rpc_clusters_clusters_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAlertsRes.ProtoReflect.Descriptor instead.
func (*ListAlertsRes) Descriptor() ([]byte, []int) {
	return file_pkg_rpc_clusters_clusters_proto_rawDescGZIP(), []int{41}
}

func (x *ListAlertsRes) GetAlerts() []*Alert {
	if x != nil {
		return x.Alerts
	}
	return nil
}

type Provider struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name          string       `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Namespace     string       `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Type          string       `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`
	Channel       string       `protobuf:"bytes,4,opt,name=channel,proto3" json:"channel,omitempty"`
	Username      string       `protobuf:"bytes,5,opt,name=username,proto3" json:"username,omitempty"`
	Address       string       `protobuf:"bytes,6,opt,name=address,proto3" json:"address,omitempty"`
	Proxy         string       `protobuf:"bytes,7,opt,name=proxy,proto3" json:"proxy,omitempty"`
	SecretRef     string       `protobuf:"bytes,8,opt,name=secretRef,proto3" json:"secretRef,omitempty"`
	CertSecretRef string       `protobuf:"bytes,9,opt,name=certSecretRef,proto3" json:"certSecretRef,omitempty"`
	Conditions    []*Condition `protobuf:"bytes,10,rep,name=conditions,proto3" json:"conditions,omitempty"`
}

func (x *Provider) Reset() {
	*x = Provider{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_rpc_clusters_clusters_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Provider) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Provider) ProtoMessage() {}

func (x *Provider) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_rpc_clusters_clusters_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Provider.ProtoReflect.Descriptor instead.
func (*Provider) Descriptor() ([]byte, []int) {
	return file_pkg_rpc_clusters_clusters_proto_rawDescGZIP(), []int{42}
}

func (x *Provider) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Provider) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *Provider) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Provider) GetChannel() string {
	if x != nil {
		return x.Channel
	}
	return ""
}

func (x *Provider) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *Provider) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *Provider) GetProxy() string {
	if x != nil {
		return x.Proxy
	}
	return ""
}

func (x *Provider) GetSecretRef() string {
	if x != nil {
		return x.SecretRef
	}
	return ""
}

func (x *Provider) GetCertSecretRef() string {
	if x != nil {
		return x.CertSecretRef
	}
	return ""
}

func (x *Provider) GetConditions() []*Condition {
	if x != nil {
		return x.Conditions
	}
	return nil
}

type ListProvidersReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ContextName string `protobuf:"bytes,1,opt,name=contextName,proto3" json:"contextName,omitempty"`
	Namespace   string `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`
}

func (x *ListProvidersReq) Reset() {
	*x = ListProvidersReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_rpc_clusters_clusters_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListProvidersReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListProvidersReq) ProtoMessage() {}

func (x *ListProvidersReq) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_rpc_clusters_clusters_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListProvidersReq.ProtoReflect.Descriptor instead.
func (*ListProvidersReq) Descriptor() ([]byte, []int) {
	return file_pkg_rpc_clusters_clusters_proto_rawDescGZIP(), []int{43}
}

func (x *ListProvidersReq) GetContextName() string {
	if x != nil {
		return x.ContextName
	}
	return ""
}

func (x *ListProvidersReq) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

type ListProvidersRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Providers []*Provider `protobuf:"bytes,1,rep,name=providers,proto3" json:"providers,omitempty"`
}

func (x *ListProvidersRes) Reset() {
	*x = ListProvidersRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_rpc_clusters_clusters_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListProvidersRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListProvidersRes) ProtoMessage() {}

func (x *ListProvidersRes) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_rpc_clusters_clusters_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListProvidersRes.ProtoReflect.Descriptor instead.
func (*ListProvidersRes) Descriptor() ([]byte, []int) {
	return file_pkg_rpc_clusters_clusters_proto_rawDescGZIP(), []int{44}
}

func (x *ListProvidersRes) GetProviders() []*Provider {
	if x != nil {
		return x.Providers
	}
	return nil
}

type Receiver struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name       string                           `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Namespace  string                           `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Type       string                           `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`
	Events     []string                         `protobuf:"bytes,4,rep,name=events,proto3" json:"events,omitempty"`
	Resources  []*CrossNamespaceObjectReference `protobuf:"bytes,5,rep,name=resources,proto3" json:"resources,omitempty"`
	SecretRef  string                           `protobuf:"bytes,6,opt,name=secretRef,proto3" json:"secretRef,omitempty"`
	Suspend    bool                             `protobuf:"varint,7,opt,name=suspend,proto3" json:"suspend,omitempty"`
	Url        string                           `protobuf:"bytes,8,opt,name=url,proto3" json:"url,omitempty"`
	Conditions []*Condition                     `protobuf:"bytes,9,rep,name=conditions,proto3" json:"conditions,omitempty"`
}

func (x *Receiver) Reset() {
	*x = Receiver{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_rpc_clusters_clusters_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Receiver) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Receiver) ProtoMessage() {}

func (x *Receiver) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_rpc_clusters_clusters_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Receiver.ProtoReflect.Descriptor instead.
func (*Receiver) Descriptor() ([]byte, []int) {
	return file_pkg_rpc_clusters_clusters_proto_rawDescGZIP(), []int{45}
}

func (x *Receiver) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Receiver) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *Receiver) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Receiver) GetEvents() []string {
	if x != nil {
		return x.Events
	}
	return nil
}

func (x *Receiver) GetResources() []*CrossNamespaceObjectReference {
	if x != nil {
		return x.Resources
	}
	return nil
}

func (x *Receiver) GetSecretRef() string {
	if x != nil {
		return x.SecretRef
	}
	return ""
}

func (x *Receiver) GetSuspend() bool {
	if x != nil {
		return x.Suspend
	}
	return false
}

func (x *Receiver) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *Receiver) GetConditions() []*Condition {
	if x != nil {
		return x.Conditions
	}
	return nil
}

type ListReceiversReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ContextName string `protobuf:"bytes,1,opt,name=contextName,proto3" json:"contextName,omitempty"`
	Namespace   string `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`
}

func (x *ListReceiversReq) Reset() {
	*x = ListReceiversReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_rpc_clusters_clusters_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListReceiversReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListReceiversReq) ProtoMessage() {}

func (x *ListReceiversReq) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_rpc_clusters_clusters_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListReceiversReq.ProtoReflect.Descriptor instead.
func (*ListReceiversReq) Descriptor() ([]byte, []int) {
	return file_pkg_rpc_clusters_clusters_proto_rawDescGZIP(), []int{46}
}

func (x *ListReceiversReq) GetContextName() string {
	if x != nil {
		return x.ContextName
	}
	return ""
}

func (x *ListReceiversReq) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

type ListReceiversRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Receivers []*Receiver `protobuf:"bytes,1,rep,name=receivers,proto3" json:"receivers,omitempty"`
}

func (x *ListReceiversRes) Reset() {
	*x = ListReceiversRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_rpc_clusters_clusters_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListReceiversRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListReceiversRes) ProtoMessage() {}

func (x *ListReceiversRes) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_rpc_clusters_clusters_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListReceiversRes.ProtoReflect.Descriptor instead.
func (*ListReceiversRes) Descriptor() ([]byte, []int) {
	return file_pkg_rpc_clusters_clusters_proto_rawDescGZIP(), []int{47}
}

func (x *ListReceiversRes) GetReceivers() []*Receiver {
	if x != nil {
		return x.Receivers
	}
	return nil
}

type Container struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name  string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Image string `protobuf:"bytes,2,opt,name=image,proto3" json:"image,omitempty"`
}

func (x *Container) Reset() {
	*x = Container{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_rpc_clusters_clusters_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Container) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Container) ProtoMessage() {}

func (x *Container) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_rpc_clusters_clusters_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Container.ProtoReflect.Descriptor instead.
func (*Container) Descriptor() ([]byte, []int) {
	return file_pkg_rpc_clusters_clusters_proto_rawDescGZIP(), []int{48}
}

func (x *Container) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Container) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

type PodTemplate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Containers []*Container `protobuf:"bytes,1,rep,name=containers,proto3" json:"containers,omitempty"`
}

func (x *PodTemplate) Reset() {
	*x = PodTemplate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_rpc_clusters_clusters_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PodTemplate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PodTemplate) ProtoMessage() {}

func (x *PodTemplate) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_rpc_clusters_clusters_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PodTemplate.ProtoReflect.Descriptor instead.
func (*PodTemplate) Descriptor() ([]byte, []int) {
	return file_pkg_rpc_clusters_clusters_proto_rawDescGZIP(), []int{49}
}

func (x *PodTemplate) GetContainers() []*Container {
	if x != nil {
		return x.Containers
	}
	return nil
}

type Workload struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name                      string       `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Namespace                 string       `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`
	KustomizationRefName      string       `protobuf:"bytes,3,opt,name=kustomizationRefName,proto3" json:"kustomizationRefName,omitempty"`
	KustomizationRefNamespace string       `protobuf:"bytes,4,opt,name=kustomizationRefNamespace,proto3" json:"kustomizationRefNamespace,omitempty"`
	PodTemplate               *PodTemplate `protobuf:"bytes,5,opt,name=podTemplate,proto3" json:"podTemplate,omitempty"`
}

func (x *Workload) Reset() {
	*x = Workload{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_rpc_clusters_clusters_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Workload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Workload) ProtoMessage() {}

func (x *Workload) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_rpc_clusters_clusters_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Workload.ProtoReflect.Descriptor instead.
func (*Workload) Descriptor() ([]byte, []int) {
	return file_pkg_rpc_clusters_clusters_proto_rawDescGZIP(), []int{50}
}

func (x *Workload) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Workload) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *Workload) GetKustomizationRefName() string {
	if x != nil {
		return x.KustomizationRefName
	}
	return ""
}

func (x *Workload) GetKustomizationRefNamespace() string {
	if x != nil {
		return x.KustomizationRefNamespace
	}
	return ""
}

func (x *Workload) GetPodTemplate() *PodTemplate {
	if x != nil {
		return x.PodTemplate
	}
	return nil
}

type ListWorkloadsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ContextName string `protobuf:"bytes,1,opt,name=contextName,proto3" json:"contextName,omitempty"`
	Namespace   string `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`
}

func (x *ListWorkloadsReq) Reset() {
	*x = ListWorkloadsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_rpc_clusters_clusters_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListWorkloadsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListWorkloadsReq) ProtoMessage() {}

func (x *ListWorkloadsReq) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_rpc_clusters_clusters_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListWorkloadsReq.ProtoReflect.Descriptor instead.
func (*ListWorkloadsReq) Descriptor() ([]byte, []int) {
	return file_pkg_rpc_clusters_clusters_proto_rawDescGZIP(), []int{51}
}

func (x *ListWorkloadsReq) GetContextName() string {
	if x != nil {
		return x.ContextName
	}
	return ""
}

func (x *ListWorkloadsReq) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

type ListWorkloadsRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Workloads []*Workload `protobuf:"bytes,1,rep,name=workloads,proto3" json:"workloads,omitempty"`
}

func (x *ListWorkloadsRes) Reset() {
	*x = ListWorkloadsRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_rpc_clusters_clusters_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListWorkloadsRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListWorkloadsRes) ProtoMessage() {}

func (x *ListWorkloadsRes) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_rpc_clusters_clusters_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListWorkloadsRes.ProtoReflect.Descriptor instead.
func (*ListWorkloadsRes) Descriptor() ([]byte, []int) {
	return file_pkg_rpc_clusters_clusters_proto_rawDescGZIP(), []int{52}
}

func (x *ListWorkloadsRes) GetWorkloads() []*Workload {
	if x != nil {
		return x.Workloads
	}
	return nil
}

type ListKustomizationChildrenReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ContextName            string `protobuf:"bytes,1,opt,name=contextName,proto3" json:"contextName,omitempty"`
	KustomizationName      string `protobuf:"bytes,2,opt,name=kustomizationName,proto3" json:"kustomizationName,omitempty"`
	KustomizationNamespace string `protobuf:"bytes,3,opt,name=KustomizationNamespace,json=kustomizationNamespace,proto3" json:"KustomizationNamespace,omitempty"`
}

func (x *ListKustomizationChildrenReq) Reset() {
	*x = ListKustomizationChildrenReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_rpc_clusters_clusters_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListKustomizationChildrenReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListKustomizationChildrenReq) ProtoMessage() {}

func (x *ListKustomizationChildrenReq) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_rpc_clusters_clusters_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListKustomizationChildrenReq.ProtoReflect.Descriptor instead.
func (*ListKustomizationChildrenReq) Descriptor() ([]byte, []int) {
	return file_pkg_rpc_clusters_clusters_proto_rawDescGZIP(), []int{53}
}

func (x *ListKustomizationChildrenReq) GetContextName() string {
	if x != nil {
		return x.ContextName
	}
	return ""
}

func (x *ListKustomizationChildrenReq) GetKustomizationName() string {
	if x != nil {
		return x.KustomizationName
	}
	return ""
}

func (x *ListKustomizationChildrenReq) GetKustomizationNamespace() string {
	if x != nil {
		return x.KustomizationNamespace
	}
	return ""
}

type ListKustomizationChildrenRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Workloads []*Workload `protobuf:"bytes,1,rep,name=workloads,proto3" json:"workloads,omitempty"`
}

func (x *ListKustomizationChildrenRes) Reset() {
	*x = ListKustomizationChildrenRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_rpc_clusters_clusters_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListKustomizationChildrenRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListKustomizationChildrenRes) ProtoMessage() {}

func (x *ListKustomizationChildrenRes) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_rpc_clusters_clusters_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListKustomizationChildrenRes.ProtoReflect.Descriptor instead.
func (*ListKustomizationChildrenRes) Descriptor() ([]byte, []int) {
	return file_pkg_rpc_clusters_clusters_proto_rawDescGZIP(), []int{54}
}

func (x *ListKustomizationChildrenRes) GetWorkloads() []*Workload {
	if x != nil {
		return x.Workloads
	}
	return nil
}

type Event struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type      string `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Reason    string `protobuf:"bytes,2,opt,name=reason,proto3" json:"reason,omitempty"`
	Message   string `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	Timestamp int32  `protobuf:"varint,4,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Source    string `protobuf:"bytes,5,opt,name=source,proto3" json:"source,omitempty"`
}

func (x *Event) Reset() {
	*x = Event{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_rpc_clusters_clusters_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Event) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Event) ProtoMessage() {}

func (x *Event) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_rpc_clusters_clusters_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Event.ProtoReflect.Descriptor instead.
func (*Event) Descriptor() ([]byte, []int) {
	return file_pkg_rpc_clusters_clusters_proto_rawDescGZIP(), []int{55}
}

func (x *Event) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Event) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *Event) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *Event) GetTimestamp() int32 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *Event) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

type ListEventsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ContextName string `protobuf:"bytes,1,opt,name=contextName,proto3" json:"contextName,omitempty"`
	Namespace   string `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`
}

func (x *ListEventsReq) Reset() {
	*x = ListEventsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_rpc_clusters_clusters_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListEventsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListEventsReq) ProtoMessage() {}

func (x *ListEventsReq) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_rpc_clusters_clusters_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListEventsReq.ProtoReflect.Descriptor instead.
func (*ListEventsReq) Descriptor() ([]byte, []int) {
	return file_pkg_rpc_clusters_clusters_proto_rawDescGZIP(), []int{56}
}

func (x *ListEventsReq) GetContextName() string {
	if x != nil {
		return x.ContextName
	}
	return ""
}

func (x *ListEventsReq) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

type ListEventsRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Events []*Event `protobuf:"bytes,1,rep,name=events,proto3" json:"events,omitempty"`
}

func (x *ListEventsRes) Reset() {
	*x = ListEventsRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_rpc_clusters_clusters_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListEventsRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListEventsRes) ProtoMessage() {}

func (x *ListEventsRes) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_rpc_clusters_clusters_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListEventsRes.ProtoReflect.Descriptor instead.
func (*ListEventsRes) Descriptor() ([]byte, []int) {
	return file_pkg_rpc_clusters_clusters_proto_rawDescGZIP(), []int{57}
}

func (x *ListEventsRes) GetEvents() []*Event {
	if x != nil {
		return x.Events
	}
	return nil
}

type GetReconciledObjectsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ContextName            string              `protobuf:"bytes,1,opt,name=contextName,proto3" json:"contextName,omitempty"`
	KustomizationName      string              `protobuf:"bytes,2,opt,name=kustomizationName,proto3" json:"kustomizationName,omitempty"`
	KustomizationNamespace string              `protobuf:"bytes,3,opt,name=kustomizationNamespace,proto3" json:"kustomizationNamespace,omitempty"`
	Kinds                  []*GroupVersionKind `protobuf:"bytes,4,rep,name=kinds,proto3" json:"kinds,omitempty"`
}

func (x *GetReconciledObjectsReq) Reset() {
	*x = GetReconciledObjectsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_rpc_clusters_clusters_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetReconciledObjectsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetReconciledObjectsReq) ProtoMessage() {}

func (x *GetReconciledObjectsReq) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_rpc_clusters_clusters_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetReconciledObjectsReq.ProtoReflect.Descriptor instead.
func (*GetReconciledObjectsReq) Descriptor() ([]byte, []int) {
	return file_pkg_rpc_clusters_clusters_proto_rawDescGZIP(), []int{58}
}

func (x *GetReconciledObjectsReq) GetContextName() string {
	if x != nil {
		return x.ContextName
	}
	return ""
}

func (x *GetReconciledObjectsReq) GetKustomizationName() string {
	if x != nil {
		return x.KustomizationName
	}
	return ""
}

func (x *GetReconciledObjectsReq) GetKustomizationNamespace() string {
	if x != nil {
		return x.KustomizationNamespace
	}
	return ""
}

func (x *GetReconciledObjectsReq) GetKinds() []*GroupVersionKind {
	if x != nil {
		return x.Kinds
	}
	return nil
}

type UnstructuredObject struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupVersionKind *GroupVersionKind `protobuf:"bytes,2,opt,name=groupVersionKind,proto3" json:"groupVersionKind,omitempty"`
	Name             string            `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Namespace        string            `protobuf:"bytes,4,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Uid              string            `protobuf:"bytes,5,opt,name=uid,proto3" json:"uid,omitempty"`
	Status           string            `protobuf:"bytes,6,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *UnstructuredObject) Reset() {
	*x = UnstructuredObject{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_rpc_clusters_clusters_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnstructuredObject) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnstructuredObject) ProtoMessage() {}

func (x *UnstructuredObject) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_rpc_clusters_clusters_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnstructuredObject.ProtoReflect.Descriptor instead.
func (*UnstructuredObject) Descriptor() ([]byte, []int) {
	return file_pkg_rpc_clusters_clusters_proto_rawDescGZIP(), []int{59}
}

func (x *UnstructuredObject) GetGroupVersionKind() *GroupVersionKind {
	if x != nil {
		return x.GroupVersionKind
	}
	return nil
}

func (x *UnstructuredObject) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UnstructuredObject) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *UnstructuredObject) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *UnstructuredObject) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type GetReconciledObjectsRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Objects []*UnstructuredObject `protobuf:"bytes,1,rep,name=objects,proto3" json:"objects,omitempty"`
}

func (x *GetReconciledObjectsRes) Reset() {
	*x = GetReconciledObjectsRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_rpc_clusters_clusters_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetReconciledObjectsRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetReconciledObjectsRes) ProtoMessage() {}

func (x *GetReconciledObjectsRes) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_rpc_clusters_clusters_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetReconciledObjectsRes.ProtoReflect.Descriptor instead.
func (*GetReconciledObjectsRes) Descriptor() ([]byte, []int) {
	return file_pkg_rpc_clusters_clusters_proto_rawDescGZIP(), []int{60}
}

func (x *GetReconciledObjectsRes) GetObjects() []*UnstructuredObject {
	if x != nil {
		return x.Objects
	}
	return nil
}

type GetChildObjectsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ContextName      string            `protobuf:"bytes,1,opt,name=contextName,proto3" json:"contextName,omitempty"`
	GroupVersionKind *GroupVersionKind `protobuf:"bytes,2,opt,name=groupVersionKind,proto3" json:"groupVersionKind,omitempty"`
	ParentUid        string            `protobuf:"bytes,3,opt,name=parentUid,proto3" json:"parentUid,omitempty"`
}

func (x *GetChildObjectsReq) Reset() {
	*x = GetChildObjectsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_rpc_clusters_clusters_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetChildObjectsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetChildObjectsReq) ProtoMessage() {}

func (x *GetChildObjectsReq) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_rpc_clusters_clusters_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetChildObjectsReq.ProtoReflect.Descriptor instead.
func (*GetChildObjectsReq) Descriptor() ([]byte, []int) {
	return file_pkg_rpc_clusters_clusters_proto_rawDescGZIP(), []int{61}
}

func (x *GetChildObjectsReq) GetContextName() string {
	if x != nil {
		return x.ContextName
	}
	return ""
}

func (x *GetChildObjectsReq) GetGroupVersionKind() *GroupVersionKind {
	if x != nil {
		return x.GroupVersionKind
	}
	return nil
}

func (x *GetChildObjectsReq) GetParentUid() string {
	if x != nil {
		return x.ParentUid
	}
	return ""
}

type GetChildObjectsRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Objects []*UnstructuredObject `protobuf:"bytes,1,rep,name=objects,proto3" json:"objects,omitempty"`
}

func (x *GetChildObjectsRes) Reset() {
	*x = GetChildObjectsRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_rpc_clusters_clusters_proto_msgTypes[62]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetChildObjectsRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetChildObjectsRes) ProtoMessage() {}

func (x *GetChildObjectsRes) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_rpc_clusters_clusters_proto_msgTypes[62]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetChildObjectsRes.ProtoReflect.Descriptor instead.
func (*GetChildObjectsRes) Descriptor() ([]byte, []int) {
	return file_pkg_rpc_clusters_clusters_proto_rawDescGZIP(), []int{62}
}

func (x *GetChildObjectsRes) GetObjects() []*UnstructuredObject {
	if x != nil {
		return x.Objects
	}
	return nil
}

var File_pkg_rpc_clusters_clusters_proto protoreflect.FileDescriptor

var file_pkg_rpc_clusters_clusters_proto_rawDesc = []byte{
	0x0a, 0x1f, 0x70, 0x6b, 0x67, 0x2f, 0x72, 0x70, 0x63, 0x2f, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65,
	0x72, 0x73, 0x2f, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x08, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x73, 0x22, 0x1d, 0x0a, 0x07, 0x43,
	0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x11, 0x0a, 0x0f, 0x4c, 0x69,
	0x73, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x73, 0x52, 0x65, 0x71, 0x22, 0x68, 0x0a,
	0x0f, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x73, 0x52, 0x65, 0x73,
	0x12, 0x26, 0x0a, 0x0e, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65,
	0x78, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x12, 0x2d, 0x0a, 0x08, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x78, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63, 0x6c, 0x75,
	0x73, 0x74, 0x65, 0x72, 0x73, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x52, 0x08, 0x63,
	0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x73, 0x22, 0x3f, 0x0a, 0x1b, 0x4c, 0x69, 0x73, 0x74, 0x4e,
	0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x73, 0x46, 0x6f, 0x72, 0x43, 0x6f, 0x6e, 0x74,
	0x65, 0x78, 0x74, 0x52, 0x65, 0x71, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78,
	0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x78, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x3d, 0x0a, 0x1b, 0x4c, 0x69, 0x73, 0x74,
	0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x73, 0x46, 0x6f, 0x72, 0x43, 0x6f, 0x6e,
	0x74, 0x65, 0x78, 0x74, 0x52, 0x65, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x6e, 0x61, 0x6d, 0x65, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x6e, 0x61, 0x6d,
	0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x73, 0x22, 0x85, 0x01, 0x0a, 0x1d, 0x43, 0x72, 0x6f, 0x73,
	0x73, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x70, 0x69,
	0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61,
	0x70, 0x69, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6b, 0x69, 0x6e,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x22,
	0x87, 0x01, 0x0a, 0x09, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x61,
	0x73, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f,
	0x6e, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x22, 0x56, 0x0a, 0x10, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x4b, 0x69, 0x6e, 0x64, 0x12, 0x14, 0x0a,
	0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x22, 0x5f, 0x0a, 0x0d, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x12, 0x30, 0x0a, 0x05, 0x6b, 0x69, 0x6e, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x73, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x4b, 0x69, 0x6e, 0x64, 0x52, 0x05, 0x6b, 0x69, 0x6e,
	0x64, 0x73, 0x22, 0xab, 0x04, 0x0a, 0x0d, 0x4b, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d,
	0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74,
	0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0f, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x70, 0x61, 0x74, 0x68, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65,
	0x66, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52,
	0x65, 0x66, 0x12, 0x33, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72,
	0x73, 0x2e, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x63, 0x6f, 0x6e,
	0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x6e, 0x74, 0x65, 0x72,
	0x76, 0x61, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x6e, 0x74, 0x65, 0x72,
	0x76, 0x61, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x75, 0x6e, 0x65, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x05, 0x70, 0x72, 0x75, 0x6e, 0x65, 0x12, 0x2e, 0x0a, 0x12, 0x72, 0x65, 0x63,
	0x6f, 0x6e, 0x63, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x41, 0x74, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x72, 0x65, 0x63, 0x6f, 0x6e, 0x63, 0x69, 0x6c, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x41, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x72, 0x65, 0x63,
	0x6f, 0x6e, 0x63, 0x69, 0x6c, 0x65, 0x41, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x72, 0x65, 0x63, 0x6f, 0x6e, 0x63, 0x69, 0x6c, 0x65, 0x41, 0x74, 0x12, 0x34, 0x0a, 0x0d, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x66, 0x4b, 0x69, 0x6e, 0x64, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x0e, 0x2e, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x73, 0x2e, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x0d, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x66, 0x4b, 0x69, 0x6e,
	0x64, 0x12, 0x35, 0x0a, 0x09, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x73, 0x18, 0x0c,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x73, 0x2e,
	0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x09, 0x73,
	0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x73, 0x12, 0x30, 0x0a, 0x13, 0x6c, 0x61, 0x73, 0x74,
	0x41, 0x70, 0x70, 0x6c, 0x69, 0x65, 0x64, 0x52, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x18,
	0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x6c, 0x61, 0x73, 0x74, 0x41, 0x70, 0x70, 0x6c, 0x69,
	0x65, 0x64, 0x52, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x34, 0x0a, 0x15, 0x6c, 0x61,
	0x73, 0x74, 0x41, 0x74, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x65, 0x64, 0x52, 0x65, 0x76, 0x69, 0x73,
	0x69, 0x6f, 0x6e, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x15, 0x6c, 0x61, 0x73, 0x74, 0x41,
	0x74, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x65, 0x64, 0x52, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e,
	0x22, 0x57, 0x0a, 0x15, 0x4c, 0x69, 0x73, 0x74, 0x4b, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x69, 0x7a,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x78, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6e,
	0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x22, 0x58, 0x0a, 0x15, 0x4c, 0x69, 0x73,
	0x74, 0x4b, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52,
	0x65, 0x73, 0x12, 0x3f, 0x0a, 0x0e, 0x6b, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x69, 0x7a, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x63, 0x6c, 0x75,
	0x73, 0x74, 0x65, 0x72, 0x73, 0x2e, 0x4b, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x69, 0x7a, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x0e, 0x6b, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x69, 0x7a, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x22, 0x6c, 0x0a, 0x10, 0x47, 0x69, 0x74, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69,
	0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x66, 0x12, 0x16, 0x0a, 0x06, 0x62, 0x72, 0x61, 0x6e, 0x63,
	0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x12,
	0x10, 0x0a, 0x03, 0x74, 0x61, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x74, 0x61,
	0x67, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x6d, 0x76, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x73, 0x65, 0x6d, 0x76, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x6f, 0x6d,
	0x6d, 0x69, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x6f, 0x6d, 0x6d, 0x69,
	0x74, 0x22, 0x8c, 0x01, 0x0a, 0x08, 0x41, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x12, 0x1a,
	0x0a, 0x08, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x73, 0x75, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x73, 0x75, 0x6d, 0x12, 0x22, 0x0a, 0x0c, 0x6c, 0x61,
	0x73, 0x74, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x61, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0c, 0x6c, 0x61, 0x73, 0x74, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x61, 0x74, 0x12, 0x12,
	0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61,
	0x74, 0x68, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x10,
	0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c,
	0x22, 0xd1, 0x03, 0x0a, 0x06, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72,
	0x6c, 0x12, 0x38, 0x0a, 0x09, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x73, 0x2e,
	0x47, 0x69, 0x74, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x66,
	0x52, 0x09, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x22, 0x0a, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0e, 0x2e, 0x63, 0x6c, 0x75, 0x73,
	0x74, 0x65, 0x72, 0x73, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x62,
	0x75, 0x63, 0x6b, 0x65, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72,
	0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x67,
	0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x12, 0x2c, 0x0a, 0x11, 0x67, 0x69, 0x74, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x67, 0x69,
	0x74, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x18, 0x0a, 0x07, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x73, 0x65, 0x63,
	0x72, 0x65, 0x74, 0x52, 0x65, 0x66, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x52, 0x65, 0x66, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x33, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x0c, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x73, 0x2e, 0x43,
	0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x12, 0x2e, 0x0a, 0x08, 0x61, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74,
	0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72,
	0x73, 0x2e, 0x41, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x52, 0x08, 0x61, 0x72, 0x74, 0x69,
	0x66, 0x61, 0x63, 0x74, 0x22, 0x80, 0x01, 0x0a, 0x0e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x73, 0x52, 0x65, 0x71, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x78, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f,
	0x6e, 0x74, 0x65, 0x78, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d,
	0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61,
	0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x2e, 0x0a, 0x0a, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0e, 0x2e, 0x63, 0x6c,
	0x75, 0x73, 0x74, 0x65, 0x72, 0x73, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0a, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x22, 0x3c, 0x0a, 0x0e, 0x4c, 0x69, 0x73, 0x74, 0x53,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x52, 0x65, 0x73, 0x12, 0x2a, 0x0a, 0x07, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x63, 0x6c, 0x75,
	0x73, 0x74, 0x65, 0x72, 0x73, 0x2e, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x07, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x73, 0x22, 0x9f, 0x01, 0x0a, 0x0d, 0x53, 0x79, 0x6e, 0x63, 0x53, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x71, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x78, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f,
	0x6e, 0x74, 0x65, 0x78, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d,
	0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61,
	0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2e, 0x0a, 0x0a, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0e, 0x2e, 0x63, 0x6c,
	0x75, 0x73, 0x74, 0x65, 0x72, 0x73, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0a, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x22, 0x39, 0x0a, 0x0d, 0x53, 0x79, 0x6e, 0x63, 0x53,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x73, 0x12, 0x28, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x63, 0x6c, 0x75, 0x73, 0x74,
	0x65, 0x72, 0x73, 0x2e, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x06, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x22, 0xa4, 0x01, 0x0a, 0x14, 0x53, 0x79, 0x6e, 0x63, 0x4b, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x20, 0x0a, 0x0b, 0x63,
	0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a,
	0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x2c, 0x0a, 0x11, 0x6b,
	0x75, 0x73, 0x74, 0x6f, 0x6d, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x6b, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x69, 0x7a,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x77, 0x69, 0x74,
	0x68, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x77,
	0x69, 0x74, 0x68, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x22, 0x55, 0x0a, 0x14, 0x53, 0x79, 0x6e,
	0x63, 0x4b, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x12, 0x3d, 0x0a, 0x0d, 0x6b, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x69, 0x7a, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x63, 0x6c, 0x75, 0x73, 0x74,
	0x65, 0x72, 0x73, 0x2e, 0x4b, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x0d, 0x6b, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x22, 0xb2, 0x02, 0x0a, 0x0b, 0x48, 0x65, 0x6c, 0x6d, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x12, 0x1c,
	0x0a, 0x09, 0x63, 0x68, 0x61, 0x72, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x63, 0x68, 0x61, 0x72, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x4b, 0x69, 0x6e, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x4b, 0x69, 0x6e, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x12, 0x33, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x0c,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x73, 0x2e,
	0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x64, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x55, 0x0a, 0x13, 0x4c, 0x69, 0x73, 0x74, 0x48, 0x65, 0x6c,
	0x6d, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x73, 0x52, 0x65, 0x71, 0x12, 0x20, 0x0a, 0x0b,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c,
	0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x22, 0x51, 0x0a, 0x13,
	0x4c, 0x69, 0x73, 0x74, 0x48, 0x65, 0x6c, 0x6d, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x73,
	0x52, 0x65, 0x73, 0x12, 0x3a, 0x0a, 0x0d, 0x68, 0x65, 0x6c, 0x6d, 0x5f, 0x72, 0x65, 0x6c, 0x65,
	0x61, 0x73, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x63, 0x6c, 0x75,
	0x73, 0x74, 0x65, 0x72, 0x73, 0x2e, 0x48, 0x65, 0x6c, 0x6d, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73,
	0x65, 0x52, 0x0c, 0x68, 0x65, 0x6c, 0x6d, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x73, 0x22,
	0x7e, 0x0a, 0x12, 0x53, 0x79, 0x6e, 0x63, 0x48, 0x65, 0x6c, 0x6d, 0x52, 0x65, 0x6c, 0x65, 0x61,
	0x73, 0x65, 0x52, 0x65, 0x71, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x78, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x68, 0x65, 0x6c, 0x6d, 0x52, 0x65, 0x6c,
	0x65, 0x61, 0x73, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f,
	0x68, 0x65, 0x6c, 0x6d, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x22,
	0x4d, 0x0a, 0x12, 0x53, 0x79, 0x6e, 0x63, 0x48, 0x65, 0x6c, 0x6d, 0x52, 0x65, 0x6c, 0x65, 0x61,
	0x73, 0x65, 0x52, 0x65, 0x73, 0x12, 0x37, 0x0a, 0x0b, 0x68, 0x65, 0x6c, 0x6d, 0x72, 0x65, 0x6c,
	0x65, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x63, 0x6c, 0x75,
	0x73, 0x74, 0x65, 0x72, 0x73, 0x2e, 0x48, 0x65, 0x6c, 0x6d, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73,
	0x65, 0x52, 0x0b, 0x68, 0x65, 0x6c, 0x6d, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x22, 0xda,
	0x02, 0x0a, 0x0b, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x12, 0x2e, 0x0a, 0x12, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74,
	0x6f, 0x72, 0x79, 0x52, 0x65, 0x66, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x69, 0x6d,
	0x61, 0x67, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x66,
	0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x4b, 0x69, 0x6e, 0x64, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x4b, 0x69, 0x6e, 0x64,
	0x12, 0x16, 0x0a, 0x06, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x12, 0x2c, 0x0a, 0x11, 0x66, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x54, 0x61, 0x67, 0x73, 0x50, 0x61, 0x74, 0x74, 0x65, 0x72, 0x6e, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x11, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x54, 0x61, 0x67, 0x73, 0x50,
	0x61, 0x74, 0x74, 0x65, 0x72, 0x6e, 0x12, 0x2c, 0x0a, 0x11, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x54, 0x61, 0x67, 0x73, 0x45, 0x78, 0x74, 0x72, 0x61, 0x63, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x11, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x54, 0x61, 0x67, 0x73, 0x45, 0x78, 0x74,
	0x72, 0x61, 0x63, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x49, 0x6d,
	0x61, 0x67, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6c, 0x61, 0x74, 0x65, 0x73,
	0x74, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x33, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x63, 0x6c, 0x75,
	0x73, 0x74, 0x65, 0x72, 0x73, 0x2e, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x0a, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x56, 0x0a, 0x14, 0x4c,
	0x69, 0x73, 0x74, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x69, 0x65, 0x73,
	0x52, 0x65, 0x71, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78,
	0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x22, 0x54, 0x0a, 0x14, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x6d, 0x61, 0x67, 0x65,
	0x50, 0x6f, 0x6c, 0x69, 0x63, 0x69, 0x65, 0x73, 0x52, 0x65, 0x73, 0x12, 0x3c, 0x0a, 0x0e, 0x69,
	0x6d, 0x61, 0x67, 0x65, 0x5f, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x73, 0x2e, 0x49,
	0x6d, 0x61, 0x67, 0x65, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x0d, 0x69, 0x6d, 0x61, 0x67,
	0x65, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x69, 0x65, 0x73, 0x22, 0xe4, 0x03, 0x0a, 0x0f, 0x49, 0x6d,
	0x61, 0x67, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x69, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x52,
	0x65, 0x66, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74,
	0x52, 0x65, 0x66, 0x12, 0x33, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65,
	0x72, 0x73, 0x2e, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x63, 0x6f,
	0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x6e, 0x74, 0x65,
	0x72, 0x76, 0x61, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x6e, 0x74, 0x65,
	0x72, 0x76, 0x61, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x12, 0x24,
	0x0a, 0x0d, 0x63, 0x65, 0x72, 0x74, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x52, 0x65, 0x66, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x65, 0x72, 0x74, 0x53, 0x65, 0x63, 0x72, 0x65,
	0x74, 0x52, 0x65, 0x66, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x73, 0x70, 0x65, 0x6e, 0x64, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x73, 0x70, 0x65, 0x6e, 0x64, 0x12, 0x2e,
	0x0a, 0x12, 0x72, 0x65, 0x63, 0x6f, 0x6e, 0x63, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x41, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x72, 0x65, 0x63, 0x6f,
	0x6e, 0x63, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x41, 0x74, 0x12, 0x20,
	0x0a, 0x0b, 0x72, 0x65, 0x63, 0x6f, 0x6e, 0x63, 0x69, 0x6c, 0x65, 0x41, 0x74, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x65, 0x63, 0x6f, 0x6e, 0x63, 0x69, 0x6c, 0x65, 0x41, 0x74,
	0x12, 0x36, 0x0a, 0x16, 0x6c, 0x61, 0x73, 0x74, 0x53, 0x63, 0x61, 0x6e, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x54, 0x61, 0x67, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x16, 0x6c, 0x61, 0x73, 0x74, 0x53, 0x63, 0x61, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x54, 0x61, 0x67, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x36, 0x0a, 0x16, 0x6c, 0x61, 0x73, 0x74,
	0x53, 0x63, 0x61, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x53, 0x63, 0x61, 0x6e, 0x54, 0x69,
	0x6d, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x05, 0x52, 0x16, 0x6c, 0x61, 0x73, 0x74, 0x53, 0x63,
	0x61, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x53, 0x63, 0x61, 0x6e, 0x54, 0x69, 0x6d, 0x65,
	0x22, 0x5a, 0x0a, 0x18, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x70,
	0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x12, 0x20, 0x0a, 0x0b,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c,
	0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x22, 0x64, 0x0a, 0x18,
	0x4c, 0x69, 0x73, 0x74, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74,
	0x6f, 0x72, 0x69, 0x65, 0x73, 0x52, 0x65, 0x73, 0x12, 0x48, 0x0a, 0x12, 0x69, 0x6d, 0x61, 0x67,
	0x65, 0x5f, 0x72, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x73, 0x2e,
	0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x52,
	0x11, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x69,
	0x65, 0x73, 0x22, 0x8a, 0x01, 0x0a, 0x16, 0x53, 0x79, 0x6e, 0x63, 0x49, 0x6d, 0x61, 0x67, 0x65,
	0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x12, 0x20, 0x0a,
	0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x30, 0x0a,
	0x13, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x69, 0x6d, 0x61, 0x67,
	0x65, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x22,
	0x5d, 0x0a, 0x16, 0x53, 0x79, 0x6e, 0x63, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x70, 0x6f,
	0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x12, 0x43, 0x0a, 0x0f, 0x69, 0x6d, 0x61,
	0x67, 0x65, 0x72, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x19, 0x2e, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x73, 0x2e, 0x49, 0x6d,
	0x61, 0x67, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x0f, 0x69,
	0x6d, 0x61, 0x67, 0x65, 0x72, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x22, 0xa4,
	0x04, 0x0a, 0x15, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x75,
	0x74, 0x6f, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09,
	0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x66, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x66, 0x12, 0x33, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x64,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x63,
	0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x73, 0x2e, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1a, 0x0a,
	0x08, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x12, 0x1e, 0x0a, 0x0a, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x50, 0x61, 0x74, 0x68, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x61, 0x74, 0x68, 0x12, 0x26, 0x0a, 0x0e, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0e, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67,
	0x79, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x73, 0x70, 0x65, 0x6e, 0x64, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x73, 0x70, 0x65, 0x6e, 0x64, 0x12, 0x2e, 0x0a, 0x12, 0x72,
	0x65, 0x63, 0x6f, 0x6e, 0x63, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x41,
	0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x72, 0x65, 0x63, 0x6f, 0x6e, 0x63, 0x69,
	0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x41, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x72,
	0x65, 0x63, 0x6f, 0x6e, 0x63, 0x69, 0x6c, 0x65, 0x41, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x72, 0x65, 0x63, 0x6f, 0x6e, 0x63, 0x69, 0x6c, 0x65, 0x41, 0x74, 0x12, 0x34, 0x0a,
	0x0d, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x66, 0x4b, 0x69, 0x6e, 0x64, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x0e, 0x2e, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x73, 0x2e,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x0d, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x66, 0x4b,
	0x69, 0x6e, 0x64, 0x12, 0x34, 0x0a, 0x15, 0x6c, 0x61, 0x73, 0x74, 0x41, 0x75, 0x74, 0x6f, 0x6d,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x75, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x15, 0x6c, 0x61, 0x73, 0x74, 0x41, 0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x75, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x6c, 0x61, 0x73,
	0x74, 0x50, 0x75, 0x73, 0x68, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0e, 0x6c, 0x61, 0x73, 0x74, 0x50, 0x75, 0x73, 0x68, 0x43, 0x6f, 0x6d, 0x6d, 0x69,
	0x74, 0x12, 0x22, 0x0a, 0x0c, 0x6c, 0x61, 0x73, 0x74, 0x50, 0x75, 0x73, 0x68, 0x54, 0x69, 0x6d,
	0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x6c, 0x61, 0x73, 0x74, 0x50, 0x75, 0x73,
	0x68, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x5f, 0x0a, 0x1d, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x6d, 0x61,
	0x67, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78,
	0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x78, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d,
	0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x22, 0x7a, 0x0a, 0x1d, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x6d,
	0x61, 0x67, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x12, 0x59, 0x0a, 0x18, 0x69, 0x6d, 0x61, 0x67, 0x65,
	0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x61, 0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x63, 0x6c, 0x75, 0x73,
	0x74, 0x65, 0x72, 0x73, 0x2e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x41, 0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x16, 0x69, 0x6d, 0x61, 0x67,
	0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x22, 0x9c, 0x01, 0x0a, 0x1c, 0x53, 0x79, 0x6e, 0x63, 0x49, 0x6d, 0x61, 0x67, 0x65,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78,
	0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x12, 0x3c, 0x0a, 0x19, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x41, 0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x19, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x41, 0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d,
	0x65, 0x22, 0x75, 0x0a, 0x1c, 0x53, 0x79, 0x6e, 0x63, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x41, 0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x12, 0x55, 0x0a, 0x15, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x61, 0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1f, 0x2e, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x73, 0x2e, 0x49, 0x6d, 0x61, 0x67,
	0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x15, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x61, 0x75,
	0x74, 0x6f, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xdd, 0x02, 0x0a, 0x05, 0x41, 0x6c, 0x65,
	0x72, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72,
	0x52, 0x65, 0x66, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x76, 0x69,
	0x64, 0x65, 0x72, 0x52, 0x65, 0x66, 0x12, 0x24, 0x0a, 0x0d, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x53,
	0x65, 0x76, 0x65, 0x72, 0x69, 0x74, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x76, 0x65, 0x72, 0x69, 0x74, 0x79, 0x12, 0x4b, 0x0a, 0x0c,
	0x65, 0x76, 0x65, 0x6e, 0x74, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x27, 0x2e, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x73, 0x2e, 0x43, 0x72,
	0x6f, 0x73, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x4f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x0c, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x12, 0x24, 0x0a, 0x0d, 0x65, 0x78, 0x63,
	0x6c, 0x75, 0x73, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x0d, 0x65, 0x78, 0x63, 0x6c, 0x75, 0x73, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x12,
	0x18, 0x0a, 0x07, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x73,
	0x70, 0x65, 0x6e, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x73, 0x70,
	0x65, 0x6e, 0x64, 0x12, 0x33, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65,
	0x72, 0x73, 0x2e, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x63, 0x6f,
	0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x4f, 0x0a, 0x0d, 0x4c, 0x69, 0x73, 0x74,
	0x41, 0x6c, 0x65, 0x72, 0x74, 0x73, 0x52, 0x65, 0x71, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x78, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6e,
	0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x22, 0x38, 0x0a, 0x0d, 0x4c, 0x69, 0x73,
	0x74, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x73, 0x52, 0x65, 0x73, 0x12, 0x27, 0x0a, 0x06, 0x61, 0x6c,
	0x65, 0x72, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6c, 0x75,
	0x73, 0x74, 0x65, 0x72, 0x73, 0x2e, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x52, 0x06, 0x61, 0x6c, 0x65,
	0x72, 0x74, 0x73, 0x22, 0xaf, 0x02, 0x0a, 0x08, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65,
	0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x12, 0x1c, 0x0a, 0x09,
	0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x52, 0x65, 0x66, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x52, 0x65, 0x66, 0x12, 0x24, 0x0a, 0x0d, 0x63, 0x65,
	0x72, 0x74, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x52, 0x65, 0x66, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0d, 0x63, 0x65, 0x72, 0x74, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x52, 0x65, 0x66,
	0x12, 0x33, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x0a,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x73, 0x2e,
	0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x64, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x52, 0x0a, 0x10, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x72, 0x6f,
	0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x78, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6e,
	0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x22, 0x44, 0x0a, 0x10, 0x4c, 0x69, 0x73,
	0x74, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x12, 0x30, 0x0a,
	0x09, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x12, 0x2e, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x76,
	0x69, 0x64, 0x65, 0x72, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x22,
	0xae, 0x02, 0x0a, 0x08, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x04, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x06, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x45, 0x0a, 0x09, 0x72, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e,
	0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x73, 0x2e, 0x43, 0x72, 0x6f, 0x73, 0x73, 0x4e, 0x61,
	0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x66,
	0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x09, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x73, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x52, 0x65, 0x66, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x52, 0x65, 0x66, 0x12,
	0x18, 0x0a, 0x07, 0x73, 0x75, 0x73, 0x70, 0x65, 0x6e, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x07, 0x73, 0x75, 0x73, 0x70, 0x65, 0x6e, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x33, 0x0a, 0x0a, 0x63,
	0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x13, 0x2e, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x73, 0x2e, 0x43, 0x6f, 0x6e, 0x64, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x22, 0x52, 0x0a, 0x10, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72,
	0x73, 0x52, 0x65, 0x71, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x78, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x22, 0x44, 0x0a, 0x10, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x63, 0x65,
	0x69, 0x76, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x12, 0x30, 0x0a, 0x09, 0x72, 0x65, 0x63, 0x65,
	0x69, 0x76, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x63, 0x6c,
	0x75, 0x73, 0x74, 0x65, 0x72, 0x73, 0x2e, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x52,
	0x09, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x73, 0x22, 0x35, 0x0a, 0x09, 0x43, 0x6f,
	0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x69,
	0x6d, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x69, 0x6d, 0x61, 0x67,
	0x65, 0x22, 0x42, 0x0a, 0x0b, 0x50, 0x6f, 0x64, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65,
	0x12, 0x33, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x73, 0x2e,
	0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x74, 0x61,
	0x69, 0x6e, 0x65, 0x72, 0x73, 0x22, 0xe7, 0x01, 0x0a, 0x08, 0x57, 0x6f, 0x72, 0x6b, 0x6c, 0x6f,
	0x61, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x12, 0x32, 0x0a, 0x14, 0x6b, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x69, 0x7a,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x66, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x14, 0x6b, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x66, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x3c, 0x0a, 0x19, 0x6b, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x66, 0x4e, 0x61, 0x6d, 0x65,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x19, 0x6b, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x66, 0x4e, 0x61, 0x6d,
	0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x37, 0x0a, 0x0b, 0x70, 0x6f, 0x64, 0x54, 0x65, 0x6d,
	0x70, 0x6c, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x63, 0x6c,
	0x75, 0x73, 0x74, 0x65, 0x72, 0x73, 0x2e, 0x50, 0x6f, 0x64, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61,
	0x74, 0x65, 0x52, 0x0b, 0x70, 0x6f, 0x64, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x22,
	0x52, 0x0a, 0x10, 0x4c, 0x69, 0x73, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x73,
	0x52, 0x65, 0x71, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78,
	0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x22, 0x44, 0x0a, 0x10, 0x4c, 0x69, 0x73, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x6c,
	0x6f, 0x61, 0x64, 0x73, 0x52, 0x65, 0x73, 0x12, 0x30, 0x0a, 0x09, 0x77, 0x6f, 0x72, 0x6b, 0x6c,
	0x6f, 0x61, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x63, 0x6c, 0x75,
	0x73, 0x74, 0x65, 0x72, 0x73, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x09,
	0x77, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x73, 0x22, 0xa6, 0x01, 0x0a, 0x1c, 0x4c, 0x69,
	0x73, 0x74, 0x4b, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43,
	0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x6f,
	0x6e, 0x74, 0x65, 0x78, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2c, 0x0a, 0x11,
	0x6b, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x6b, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x69,
	0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x36, 0x0a, 0x16, 0x4b, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x16, 0x6b, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x22, 0x50, 0x0a, 0x1c, 0x4c, 0x69, 0x73, 0x74, 0x4b, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x52,
	0x65, 0x73, 0x12, 0x30, 0x0a, 0x09, 0x77, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x73,
	0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x09, 0x77, 0x6f, 0x72, 0x6b, 0x6c,
	0x6f, 0x61, 0x64, 0x73, 0x22, 0x83, 0x01, 0x0a, 0x05, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x12,
	0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x22, 0x4f, 0x0a, 0x0d, 0x4c, 0x69,
	0x73, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x12, 0x20, 0x0a, 0x0b, 0x63,
	0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a,
	0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x22, 0x38, 0x0a, 0x0d, 0x4c,
	0x69, 0x73, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x12, 0x27, 0x0a, 0x06,
	0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63,
	0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x73, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x06, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x73, 0x22, 0xd3, 0x01, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x52, 0x65, 0x63,
	0x6f, 0x6e, 0x63, 0x69, 0x6c, 0x65, 0x64, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x52, 0x65,
	0x71, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x2c, 0x0a, 0x11, 0x6b, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11,
	0x6b, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x36, 0x0a, 0x16, 0x6b, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x69, 0x7a, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x16, 0x6b, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x30, 0x0a, 0x05, 0x6b, 0x69, 0x6e,
	0x64, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x63, 0x6c, 0x75, 0x73, 0x74,
	0x65, 0x72, 0x73, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x4b, 0x69, 0x6e, 0x64, 0x52, 0x05, 0x6b, 0x69, 0x6e, 0x64, 0x73, 0x22, 0xb8, 0x01, 0x0a, 0x12,
	0x55, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x75, 0x72, 0x65, 0x64, 0x4f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x12, 0x46, 0x0a, 0x10, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x56, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x4b, 0x69, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x63,
	0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x73, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x56, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x4b, 0x69, 0x6e, 0x64, 0x52, 0x10, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x56,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x4b, 0x69, 0x6e, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1c,
	0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x10, 0x0a, 0x03,
	0x75, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x51, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x52, 0x65, 0x63,
	0x6f, 0x6e, 0x63, 0x69, 0x6c, 0x65, 0x64, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x52, 0x65,
	0x73, 0x12, 0x36, 0x0a, 0x07, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x73, 0x2e, 0x55, 0x6e,
	0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x75, 0x72, 0x65, 0x64, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x52, 0x07, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x22, 0x9c, 0x01, 0x0a, 0x12, 0x47, 0x65,
	0x74, 0x43, 0x68, 0x69, 0x6c, 0x64, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x52, 0x65, 0x71,
	0x12, 0x20, 0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x46, 0x0a, 0x10, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x56, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x4b, 0x69, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x63,
	0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x73, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x56, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x4b, 0x69, 0x6e, 0x64, 0x52, 0x10, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x56,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x4b, 0x69, 0x6e, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x61,
	0x72, 0x65, 0x6e, 0x74, 0x55, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70,
	0x61, 0x72, 0x65, 0x6e, 0x74, 0x55, 0x69, 0x64, 0x22, 0x4c, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x43,
	0x68, 0x69, 0x6c, 0x64, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x52, 0x65, 0x73, 0x12, 0x36,
	0x0a, 0x07, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1c, 0x2e, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x73, 0x2e, 0x55, 0x6e, 0x73, 0x74, 0x72,
	0x75, 0x63, 0x74, 0x75, 0x72, 0x65, 0x64, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x07, 0x6f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2a, 0x30, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x07,
	0x0a, 0x03, 0x47, 0x69, 0x74, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x42, 0x75, 0x63, 0x6b, 0x65,
	0x74, 0x10, 0x01, 0x12, 0x08, 0x0a, 0x04, 0x48, 0x65, 0x6c, 0x6d, 0x10, 0x02, 0x12, 0x09, 0x0a,
	0x05, 0x43, 0x68, 0x61, 0x72, 0x74, 0x10, 0x03, 0x32, 0xb8, 0x0c, 0x0a, 0x08, 0x43, 0x6c, 0x75,
	0x73, 0x74, 0x65, 0x72, 0x73, 0x12, 0x44, 0x0a, 0x0c, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x6e,
	0x74, 0x65, 0x78, 0x74, 0x73, 0x12, 0x19, 0x2e, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x73,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x73, 0x52, 0x65, 0x71,
	0x1a, 0x19, 0x2e, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x73, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x73, 0x52, 0x65, 0x73, 0x12, 0x68, 0x0a, 0x18, 0x4c,
	0x69, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x73, 0x46, 0x6f, 0x72,
	0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x12, 0x25, 0x2e, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65,
	0x72, 0x73, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x73, 0x46, 0x6f, 0x72, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x25,
	0x2e, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x73, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4e, 0x61,
	0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x73, 0x46, 0x6f, 0x72, 0x43, 0x6f, 0x6e, 0x74, 0x65,
	0x78, 0x74, 0x52, 0x65, 0x73, 0x12, 0x56, 0x0a, 0x12, 0x4c, 0x69, 0x73, 0x74, 0x4b, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1f, 0x2e, 0x63, 0x6c,
	0x75, 0x73, 0x74, 0x65, 0x72, 0x73, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4b, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x1f, 0x2e, 0x63,
	0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x73, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4b, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x12, 0x41, 0x0a,
	0x0b, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x12, 0x18, 0x2e, 0x63,
	0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x73, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x18, 0x2e, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72,
	0x73, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x52, 0x65, 0x73,
	0x12, 0x53, 0x0a, 0x11, 0x53, 0x79, 0x6e, 0x63, 0x4b, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x69, 0x7a,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x2e, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x73,
	0x2e, 0x53, 0x79, 0x6e, 0x63, 0x4b, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x69, 0x7a, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x1e, 0x2e, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x73,
	0x2e, 0x53, 0x79, 0x6e, 0x63, 0x4b, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x69, 0x7a, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x12, 0x50, 0x0a, 0x10, 0x4c, 0x69, 0x73, 0x74, 0x48, 0x65, 0x6c,
	0x6d, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x73, 0x12, 0x1d, 0x2e, 0x63, 0x6c, 0x75, 0x73,
	0x74, 0x65, 0x72, 0x73, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x48, 0x65, 0x6c, 0x6d, 0x52, 0x65, 0x6c,
	0x65, 0x61, 0x73, 0x65, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x1d, 0x2e, 0x63, 0x6c, 0x75, 0x73, 0x74,
	0x65, 0x72, 0x73, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x48, 0x65, 0x6c, 0x6d, 0x52, 0x65, 0x6c, 0x65,
	0x61, 0x73, 0x65, 0x73, 0x52, 0x65, 0x73, 0x12, 0x3e, 0x0a, 0x0a, 0x4c, 0x69, 0x73, 0x74, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x17, 0x2e, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x73,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x17,
	0x2e, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x73, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x12, 0x3e, 0x0a, 0x0a, 0x53, 0x79, 0x6e, 0x63, 0x53,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x17, 0x2e, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x73,
	0x2e, 0x53, 0x79, 0x6e, 0x63, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x17,
	0x2e, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x73, 0x2e, 0x53, 0x79, 0x6e, 0x63, 0x53, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x73, 0x12, 0x4d, 0x0a, 0x0f, 0x53, 0x79, 0x6e, 0x63, 0x48,
	0x65, 0x6c, 0x6d, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x12, 0x1c, 0x2e, 0x63, 0x6c, 0x75,
	0x73, 0x74, 0x65, 0x72, 0x73, 0x2e, 0x53, 0x79, 0x6e, 0x63, 0x48, 0x65, 0x6c, 0x6d, 0x52, 0x65,
	0x6c, 0x65, 0x61, 0x73, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x1c, 0x2e, 0x63, 0x6c, 0x75, 0x73, 0x74,
	0x65, 0x72, 0x73, 0x2e, 0x53, 0x79, 0x6e, 0x63, 0x48, 0x65, 0x6c, 0x6d, 0x52, 0x65, 0x6c, 0x65,
	0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x12, 0x3e, 0x0a, 0x0a, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x6c,
	0x65, 0x72, 0x74, 0x73, 0x12, 0x17, 0x2e, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x73, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x17, 0x2e,
	0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x73, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x6c, 0x65,
	0x72, 0x74, 0x73, 0x52, 0x65, 0x73, 0x12, 0x53, 0x0a, 0x11, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x6d,
	0x61, 0x67, 0x65, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x69, 0x65, 0x73, 0x12, 0x1e, 0x2e, 0x63, 0x6c,
	0x75, 0x73, 0x74, 0x65, 0x72, 0x73, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x6d, 0x61, 0x67, 0x65,
	0x50, 0x6f, 0x6c, 0x69, 0x63, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x1e, 0x2e, 0x63, 0x6c,
	0x75, 0x73, 0x74, 0x65, 0x72, 0x73, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x6d, 0x61, 0x67, 0x65,
	0x50, 0x6f, 0x6c, 0x69, 0x63, 0x69, 0x65, 0x73, 0x52, 0x65, 0x73, 0x12, 0x5f, 0x0a, 0x15, 0x4c,
	0x69, 0x73, 0x74, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f,
	0x72, 0x69, 0x65, 0x73, 0x12, 0x22, 0x2e, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x73, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74,
	0x6f, 0x72, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x22, 0x2e, 0x63, 0x6c, 0x75, 0x73, 0x74,
	0x65, 0x72, 0x73, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x70,
	0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x52, 0x65, 0x73, 0x12, 0x6e, 0x0a, 0x1a,
	0x4c, 0x69, 0x73, 0x74, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41,
	0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x27, 0x2e, 0x63, 0x6c, 0x75,
	0x73, 0x74, 0x65, 0x72, 0x73, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x52, 0x65, 0x71, 0x1a, 0x27, 0x2e, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x73, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x75,
	0x74, 0x6f, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x12, 0x47, 0x0a, 0x0d,
	0x4c, 0x69, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x12, 0x1a, 0x2e,
	0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x73, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x72, 0x6f,
	0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x1a, 0x2e, 0x63, 0x6c, 0x75, 0x73,
	0x74, 0x65, 0x72, 0x73, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65,
	0x72, 0x73, 0x52, 0x65, 0x73, 0x12, 0x47, 0x0a, 0x0d, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x63,
	0x65, 0x69, 0x76, 0x65, 0x72, 0x73, 0x12, 0x1a, 0x2e, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72,
	0x73, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x73, 0x52,
	0x65, 0x71, 0x1a, 0x1a, 0x2e, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x73, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x12, 0x59,
	0x0a, 0x13, 0x53, 0x79, 0x6e, 0x63, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x73,
	0x69, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x20, 0x2e, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x73,
	0x2e, 0x53, 0x79, 0x6e, 0x63, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69,
	0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x1a, 0x20, 0x2e, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65,
	0x72, 0x73, 0x2e, 0x53, 0x79, 0x6e, 0x63, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x70, 0x6f,
	0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x12, 0x6b, 0x0a, 0x19, 0x53, 0x79, 0x6e,
	0x63, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x75, 0x74, 0x6f,
	0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x26, 0x2e, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72,
	0x73, 0x2e, 0x53, 0x79, 0x6e, 0x63, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x41, 0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x26,
	0x2e, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x73, 0x2e, 0x53, 0x79, 0x6e, 0x63, 0x49, 0x6d,
	0x61, 0x67, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x12, 0x5c, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x52, 0x65, 0x63,
	0x6f, 0x6e, 0x63, 0x69, 0x6c, 0x65, 0x64, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x12, 0x21,
	0x2e, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x63,
	0x6f, 0x6e, 0x63, 0x69, 0x6c, 0x65, 0x64, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x52, 0x65,
	0x71, 0x1a, 0x21, 0x2e, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x73, 0x2e, 0x47, 0x65, 0x74,
	0x52, 0x65, 0x63, 0x6f, 0x6e, 0x63, 0x69, 0x6c, 0x65, 0x64, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x73, 0x52, 0x65, 0x73, 0x12, 0x4d, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x43, 0x68, 0x69, 0x6c, 0x64,
	0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x12, 0x1c, 0x2e, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65,
	0x72, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x68, 0x69, 0x6c, 0x64, 0x4f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x1c, 0x2e, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x73,
	0x2e, 0x47, 0x65, 0x74, 0x43, 0x68, 0x69, 0x6c, 0x64, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73,
	0x52, 0x65, 0x73, 0x42, 0x12, 0x5a, 0x10, 0x70, 0x6b, 0x67, 0x2f, 0x72, 0x70, 0x63, 0x2f, 0x63,
	0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_pkg_rpc_clusters_clusters_proto_rawDescOnce sync.Once
	file_pkg_rpc_clusters_clusters_proto_rawDescData = file_pkg_rpc_clusters_clusters_proto_rawDesc
)

func file_pkg_rpc_clusters_clusters_proto_rawDescGZIP() []byte {
	file_pkg_rpc_clusters_clusters_proto_rawDescOnce.Do(func() {
		file_pkg_rpc_clusters_clusters_proto_rawDescData = protoimpl.X.CompressGZIP(file_pkg_rpc_clusters_clusters_proto_rawDescData)
	})
	return file_pkg_rpc_clusters_clusters_proto_rawDescData
}

var file_pkg_rpc_clusters_clusters_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_pkg_rpc_clusters_clusters_proto_msgTypes = make([]protoimpl.MessageInfo, 63)
var file_pkg_rpc_clusters_clusters_proto_goTypes = []interface{}{
	(Type)(0),                             // 0: clusters.Type
	(*Context)(nil),                       // 1: clusters.Context
	(*ListContextsReq)(nil),               // 2: clusters.ListContextsReq
	(*ListContextsRes)(nil),               // 3: clusters.ListContextsRes
	(*ListNamespacesForContextReq)(nil),   // 4: clusters.ListNamespacesForContextReq
	(*ListNamespacesForContextRes)(nil),   // 5: clusters.ListNamespacesForContextRes
	(*CrossNamespaceObjectReference)(nil), // 6: clusters.CrossNamespaceObjectReference
	(*Condition)(nil),                     // 7: clusters.Condition
	(*GroupVersionKind)(nil),              // 8: clusters.GroupVersionKind
	(*SnapshotEntry)(nil),                 // 9: clusters.SnapshotEntry
	(*Kustomization)(nil),                 // 10: clusters.Kustomization
	(*ListKustomizationsReq)(nil),         // 11: clusters.ListKustomizationsReq
	(*ListKustomizationsRes)(nil),         // 12: clusters.ListKustomizationsRes
	(*GitRepositoryRef)(nil),              // 13: clusters.GitRepositoryRef
	(*Artifact)(nil),                      // 14: clusters.Artifact
	(*Source)(nil),                        // 15: clusters.Source
	(*ListSourcesReq)(nil),                // 16: clusters.ListSourcesReq
	(*ListSourcesRes)(nil),                // 17: clusters.ListSourcesRes
	(*SyncSourceReq)(nil),                 // 18: clusters.SyncSourceReq
	(*SyncSourceRes)(nil),                 // 19: clusters.SyncSourceRes
	(*SyncKustomizationReq)(nil),          // 20: clusters.SyncKustomizationReq
	(*SyncKustomizationRes)(nil),          // 21: clusters.SyncKustomizationRes
	(*HelmRelease)(nil),                   // 22: clusters.HelmRelease
	(*ListHelmReleasesReq)(nil),           // 23: clusters.ListHelmReleasesReq
	(*ListHelmReleasesRes)(nil),           // 24: clusters.ListHelmReleasesRes
	(*SyncHelmReleaseReq)(nil),            // 25: clusters.SyncHelmReleaseReq
	(*SyncHelmReleaseRes)(nil),            // 26: clusters.SyncHelmReleaseRes
	(*ImagePolicy)(nil),                   // 27: clusters.ImagePolicy
	(*ListImagePoliciesReq)(nil),          // 28: clusters.ListImagePoliciesReq
	(*ListImagePoliciesRes)(nil),          // 29: clusters.ListImagePoliciesRes
	(*ImageRepository)(nil),               // 30: clusters.ImageRepository
	(*ListImageRepositoriesReq)(nil),      // 31: clusters.ListImageRepositoriesReq
	(*ListImageRepositoriesRes)(nil),      // 32: clusters.ListImageRepositoriesRes
	(*SyncImageRepositoryReq)(nil),        // 33: clusters.SyncImageRepositoryReq
	(*SyncImageRepositoryRes)(nil),        // 34: clusters.SyncImageRepositoryRes
	(*ImageUpdateAutomation)(nil),         // 35: clusters.ImageUpdateAutomation
	(*ListImageUpdateAutomationsReq)(nil), // 36: clusters.ListImageUpdateAutomationsReq
	(*ListImageUpdateAutomationsRes)(nil), // 37: clusters.ListImageUpdateAutomationsRes
	(*SyncImageUpdateAutomationReq)(nil),  // 38: clusters.SyncImageUpdateAutomationReq
	(*SyncImageUpdateAutomationRes)(nil),  // 39: clusters.SyncImageUpdateAutomationRes
	(*Alert)(nil),                         // 40: clusters.Alert
	(*ListAlertsReq)(nil),                 // 41: clusters.ListAlertsReq
	(*ListAlertsRes)(nil),                 // 42: clusters.ListAlertsRes
	(*Provider)(nil),                      // 43: clusters.Provider
	(*ListProvidersReq)(nil),              // 44: clusters.ListProvidersReq
	(*ListProvidersRes)(nil),              // 45: clusters.ListProvidersRes
	(*Receiver)(nil),                      // 46: clusters.Receiver
	(*ListReceiversReq)(nil),              // 47: clusters.ListReceiversReq
	(*ListReceiversRes)(nil),              // 48: clusters.ListReceiversRes
	(*Container)(nil),                     // 49: clusters.Container
	(*PodTemplate)(nil),                   // 50: clusters.PodTemplate
	(*Workload)(nil),                      // 51: clusters.Workload
	(*ListWorkloadsReq)(nil),              // 52: clusters.ListWorkloadsReq
	(*ListWorkloadsRes)(nil),              // 53: clusters.ListWorkloadsRes
	(*ListKustomizationChildrenReq)(nil),  // 54: clusters.ListKustomizationChildrenReq
	(*ListKustomizationChildrenRes)(nil),  // 55: clusters.ListKustomizationChildrenRes
	(*Event)(nil),                         // 56: clusters.Event
	(*ListEventsReq)(nil),                 // 57: clusters.ListEventsReq
	(*ListEventsRes)(nil),                 // 58: clusters.ListEventsRes
	(*GetReconciledObjectsReq)(nil),       // 59: clusters.GetReconciledObjectsReq
	(*UnstructuredObject)(nil),            // 60: clusters.UnstructuredObject
	(*GetReconciledObjectsRes)(nil),       // 61: clusters.GetReconciledObjectsRes
	(*GetChildObjectsReq)(nil),            // 62: clusters.GetChildObjectsReq
	(*GetChildObjectsRes)(nil),            // 63: clusters.GetChildObjectsRes
}
var file_pkg_rpc_clusters_clusters_proto_depIdxs = []int32{
	1,  // 0: clusters.ListContextsRes.contexts:type_name -> clusters.Context
	8,  // 1: clusters.SnapshotEntry.kinds:type_name -> clusters.GroupVersionKind
	7,  // 2: clusters.Kustomization.conditions:type_name -> clusters.Condition
	0,  // 3: clusters.Kustomization.sourceRefKind:type_name -> clusters.Type
	9,  // 4: clusters.Kustomization.snapshots:type_name -> clusters.SnapshotEntry
	10, // 5: clusters.ListKustomizationsRes.kustomizations:type_name -> clusters.Kustomization
	13, // 6: clusters.Source.reference:type_name -> clusters.GitRepositoryRef
	0,  // 7: clusters.Source.type:type_name -> clusters.Type
	7,  // 8: clusters.Source.conditions:type_name -> clusters.Condition
	14, // 9: clusters.Source.artifact:type_name -> clusters.Artifact
	0,  // 10: clusters.ListSourcesReq.sourceType:type_name -> clusters.Type
	15, // 11: clusters.ListSourcesRes.sources:type_name -> clusters.Source
	0,  // 12: clusters.SyncSourceReq.sourceType:type_name -> clusters.Type
	15, // 13: clusters.SyncSourceRes.source:type_name -> clusters.Source
	10, // 14: clusters.SyncKustomizationRes.kustomization:type_name -> clusters.Kustomization
	7,  // 15: clusters.HelmRelease.conditions:type_name -> clusters.Condition
	22, // 16: clusters.ListHelmReleasesRes.helm_releases:type_name -> clusters.HelmRelease
	22, // 17: clusters.SyncHelmReleaseRes.helmrelease:type_name -> clusters.HelmRelease
	7,  // 18: clusters.ImagePolicy.conditions:type_name -> clusters.Condition
	27, // 19: clusters.ListImagePoliciesRes.image_policies:type_name -> clusters.ImagePolicy
	7,  // 20: clusters.ImageRepository.conditions:type_name -> clusters.Condition
	30, // 21: clusters.ListImageRepositoriesRes.image_repositories:type_name -> clusters.ImageRepository
	30, // 22: clusters.SyncImageRepositoryRes.imagerepository:type_name -> clusters.ImageRepository
	7,  // 23: clusters.ImageUpdateAutomation.conditions:type_name -> clusters.Condition
	0,  // 24: clusters.ImageUpdateAutomation.sourceRefKind:type_name -> clusters.Type
	35, // 25: clusters.ListImageUpdateAutomationsRes.image_update_automations:type_name -> clusters.ImageUpdateAutomation
	35, // 26: clusters.SyncImageUpdateAutomationRes.imageupdateautomation:type_name -> clusters.ImageUpdateAutomation
	6,  // 27: clusters.Alert.eventSources:type_name -> clusters.CrossNamespaceObjectReference
	7,  // 28: clusters.Alert.conditions:type_name -> clusters.Condition
	40, // 29: clusters.ListAlertsRes.alerts:type_name -> clusters.Alert
	7,  // 30: clusters.Provider.conditions:type_name -> clusters.Condition
	43, // 31: clusters.ListProvidersRes.providers:type_name -> clusters.Provider
	6,  // 32: clusters.Receiver.resources:type_name -> clusters.CrossNamespaceObjectReference
	7,  // 33: clusters.Receiver.conditions:type_name -> clusters.Condition
	46, // 34: clusters.ListReceiversRes.receivers:type_name -> clusters.Receiver
	49, // 35: clusters.PodTemplate.containers:type_name -> clusters.Container
	50, // 36: clusters.Workload.podTemplate:type_name -> clusters.PodTemplate
	51, // 37: clusters.ListWorkloadsRes.workloads:type_name -> clusters.Workload
	51, // 38: clusters.ListKustomizationChildrenRes.workloads:type_name -> clusters.Workload
	56, // 39: clusters.ListEventsRes.events:type_name -> clusters.Event
	8,  // 40: clusters.GetReconciledObjectsReq.kinds:type_name -> clusters.GroupVersionKind
	8,  // 41: clusters.UnstructuredObject.groupVersionKind:type_name -> clusters.GroupVersionKind
	60, // 42: clusters.GetReconciledObjectsRes.objects:type_name -> clusters.UnstructuredObject
	8,  // 43: clusters.GetChildObjectsReq.groupVersionKind:type_name -> clusters.GroupVersionKind
	60, // 44: clusters.GetChildObjectsRes.objects:type_name -> clusters.UnstructuredObject
	2,  // 45: clusters.Clusters.ListContexts:input_type -> clusters.ListContextsReq
	4,  // 46: clusters.Clusters.ListNamespacesForContext:input_type -> clusters.ListNamespacesForContextReq
	11, // 47: clusters.Clusters.ListKustomizations:input_type -> clusters.ListKustomizationsReq
	16, // 48: clusters.Clusters.ListSources:input_type -> clusters.ListSourcesReq
	20, // 49: clusters.Clusters.SyncKustomization:input_type -> clusters.SyncKustomizationReq
	23, // 50: clusters.Clusters.ListHelmReleases:input_type -> clusters.ListHelmReleasesReq
	57, // 51: clusters.Clusters.ListEvents:input_type -> clusters.ListEventsReq
	18, // 52: clusters.Clusters.SyncSource:input_type -> clusters.SyncSourceReq
	25, // 53: clusters.Clusters.SyncHelmRelease:input_type -> clusters.SyncHelmReleaseReq
	41, // 54: clusters.Clusters.ListAlerts:input_type -> clusters.ListAlertsReq
	28, // 55: clusters.Clusters.ListImagePolicies:input_type -> clusters.ListImagePoliciesReq
	31, // 56: clusters.Clusters.ListImageRepositories:input_type -> clusters.ListImageRepositoriesReq
	36, // 57: clusters.Clusters.ListImageUpdateAutomations:input_type -> clusters.ListImageUpdateAutomationsReq
	44, // 58: clusters.Clusters.ListProviders:input_type -> clusters.ListProvidersReq
	47, // 59: clusters.Clusters.ListReceivers:input_type -> clusters.ListReceiversReq
	33, // 60: clusters.Clusters.SyncImageRepository:input_type -> clusters.SyncImageRepositoryReq
	38, // 61: clusters.Clusters.SyncImageUpdateAutomation:input_type -> clusters.SyncImageUpdateAutomationReq
	59, // 62: clusters.Clusters.GetReconciledObjects:input_type -> clusters.GetReconciledObjectsReq
	62, // 63: clusters.Clusters.GetChildObjects:input_type -> clusters.GetChildObjectsReq
	3,  // 64: clusters.Clusters.ListContexts:output_type -> clusters.ListContextsRes
	5,  // 65: clusters.Clusters.ListNamespacesForContext:output_type -> clusters.ListNamespacesForContextRes
	12, // 66: clusters.Clusters.ListKustomizations:output_type -> clusters.ListKustomizationsRes
	17, // 67: clusters.Clusters.ListSources:output_type -> clusters.ListSourcesRes
	21, // 68: clusters.Clusters.SyncKustomization:output_type -> clusters.SyncKustomizationRes
	24, // 69: clusters.Clusters.ListHelmReleases:output_type -> clusters.ListHelmReleasesRes
	58, // 70: clusters.Clusters.ListEvents:output_type -> clusters.ListEventsRes
	19, // 71: clusters.Clusters.SyncSource:output_type -> clusters.SyncSourceRes
	26, // 72: clusters.Clusters.SyncHelmRelease:output_type -> clusters.SyncHelmReleaseRes
	42, // 73: clusters.Clusters.ListAlerts:output_type -> clusters.ListAlertsRes
	29, // 74: clusters.Clusters.ListImagePolicies:output_type -> clusters.ListImagePoliciesRes
	32, // 75: clusters.Clusters.ListImageRepositories:output_type -> clusters.ListImageRepositoriesRes
	37, // 76: clusters.Clusters.ListImageUpdateAutomations:output_type -> clusters.ListImageUpdateAutomationsRes
	45, // 77: clusters.Clusters.ListProviders:output_type -> clusters.ListProvidersRes
	48, // 78: clusters.Clusters.ListReceivers:output_type -> clusters.ListReceiversRes
	34, // 79: clusters.Clusters.SyncImageRepository:output_type -> clusters.SyncImageRepositoryRes
	39, // 80: clusters.Clusters.SyncImageUpdateAutomation:output_type -> clusters.SyncImageUpdateAutomationRes
	61, // 81: clusters.Clusters.GetReconciledObjects:output_type -> clusters.GetReconciledObjectsRes
	63, // 82: clusters.Clusters.GetChildObjects:output_type -> clusters.GetChildObjectsRes
	64, // [64:83] is the sub-list for method output_type
	45, // [45:64] is the sub-list for method input_type
	45, // [45:45] is the sub-list for extension type_name
	45, // [45:45] is the sub-list for extension extendee
	0,  // [0:45] is the sub-list for field type_name
}

func init() { file_pkg_rpc_clusters_clusters_proto_init() }
func file_pkg_rpc_clusters_clusters_proto_init() {
	if File_pkg_rpc_clusters_clusters_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_pkg_rpc_clusters_clusters_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Context); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_rpc_clusters_clusters_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListContextsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_rpc_clusters_clusters_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListContextsRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_rpc_clusters_clusters_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListNamespacesForContextReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_rpc_clusters_clusters_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListNamespacesForContextRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_rpc_clusters_clusters_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CrossNamespaceObjectReference); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_rpc_clusters_clusters_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Condition); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_rpc_clusters_clusters_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupVersionKind); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_rpc_clusters_clusters_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SnapshotEntry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_rpc_clusters_clusters_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Kustomization); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_rpc_clusters_clusters_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListKustomizationsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_rpc_clusters_clusters_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListKustomizationsRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_rpc_clusters_clusters_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GitRepositoryRef); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_rpc_clusters_clusters_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Artifact); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_rpc_clusters_clusters_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Source); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_rpc_clusters_clusters_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListSourcesReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_rpc_clusters_clusters_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListSourcesRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_rpc_clusters_clusters_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SyncSourceReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_rpc_clusters_clusters_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SyncSourceRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_rpc_clusters_clusters_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SyncKustomizationReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_rpc_clusters_clusters_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SyncKustomizationRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_rpc_clusters_clusters_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HelmRelease); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_rpc_clusters_clusters_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListHelmReleasesReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_rpc_clusters_clusters_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListHelmReleasesRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_rpc_clusters_clusters_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SyncHelmReleaseReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_rpc_clusters_clusters_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SyncHelmReleaseRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_rpc_clusters_clusters_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ImagePolicy); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_rpc_clusters_clusters_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListImagePoliciesReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_rpc_clusters_clusters_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListImagePoliciesRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_rpc_clusters_clusters_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ImageRepository); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_rpc_clusters_clusters_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListImageRepositoriesReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_rpc_clusters_clusters_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListImageRepositoriesRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_rpc_clusters_clusters_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SyncImageRepositoryReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_rpc_clusters_clusters_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SyncImageRepositoryRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_rpc_clusters_clusters_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ImageUpdateAutomation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_rpc_clusters_clusters_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListImageUpdateAutomationsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_rpc_clusters_clusters_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListImageUpdateAutomationsRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_rpc_clusters_clusters_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SyncImageUpdateAutomationReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_rpc_clusters_clusters_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SyncImageUpdateAutomationRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_rpc_clusters_clusters_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Alert); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_rpc_clusters_clusters_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAlertsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_rpc_clusters_clusters_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAlertsRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_rpc_clusters_clusters_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Provider); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_rpc_clusters_clusters_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListProvidersReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_rpc_clusters_clusters_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListProvidersRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_rpc_clusters_clusters_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Receiver); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_rpc_clusters_clusters_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListReceiversReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_rpc_clusters_clusters_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListReceiversRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_rpc_clusters_clusters_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Container); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_rpc_clusters_clusters_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PodTemplate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_rpc_clusters_clusters_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Workload); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_rpc_clusters_clusters_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListWorkloadsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_rpc_clusters_clusters_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListWorkloadsRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_rpc_clusters_clusters_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListKustomizationChildrenReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_rpc_clusters_clusters_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListKustomizationChildrenRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_rpc_clusters_clusters_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Event); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_rpc_clusters_clusters_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListEventsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_rpc_clusters_clusters_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListEventsRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_rpc_clusters_clusters_proto_msgTypes[58].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetReconciledObjectsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_rpc_clusters_clusters_proto_msgTypes[59].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnstructuredObject); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_rpc_clusters_clusters_proto_msgTypes[60].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetReconciledObjectsRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_rpc_clusters_clusters_proto_msgTypes[61].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetChildObjectsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_rpc_clusters_clusters_proto_msgTypes[62].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetChildObjectsRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_pkg_rpc_clusters_clusters_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   63,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_pkg_rpc_clusters_clusters_proto_goTypes,
		DependencyIndexes: file_pkg_rpc_clusters_clusters_proto_depIdxs,
		EnumInfos:         file_pkg_rpc_clusters_clusters_proto_enumTypes,
		MessageInfos:      file_pkg_rpc_clusters_clusters_proto_msgTypes,
	}.Build()
	File_pkg_rpc_clusters_clusters_proto = out.File
	file_pkg_rpc_clusters_clusters_proto_rawDesc = nil
	file_pkg_rpc_clusters_clusters_proto_goTypes = nil
	file_pkg_rpc_clusters_clusters_proto_depIdxs = nil
}
